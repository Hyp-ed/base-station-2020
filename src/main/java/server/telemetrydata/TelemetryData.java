// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package telemetrydata;

public final class TelemetryData {
  private TelemetryData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ServerToClientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:telemetry_data.ServerToClient)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
     */
    telemetrydata.TelemetryData.ServerToClient.Command getCommand();
  }
  /**
   * Protobuf type {@code telemetry_data.ServerToClient}
   */
  public  static final class ServerToClient extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:telemetry_data.ServerToClient)
      ServerToClientOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerToClient.newBuilder() to construct.
    private ServerToClient(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerToClient() {
      command_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServerToClient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telemetrydata.TelemetryData.internal_static_telemetry_data_ServerToClient_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telemetrydata.TelemetryData.internal_static_telemetry_data_ServerToClient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telemetrydata.TelemetryData.ServerToClient.class, telemetrydata.TelemetryData.ServerToClient.Builder.class);
    }

    /**
     * Protobuf enum {@code telemetry_data.ServerToClient.Command}
     */
    public enum Command
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ACK = 0;</code>
       */
      ACK(0),
      /**
       * <code>STOP = 1;</code>
       */
      STOP(1),
      /**
       * <code>CALIBRATE = 2;</code>
       */
      CALIBRATE(2),
      /**
       * <code>LAUNCH = 3;</code>
       */
      LAUNCH(3),
      /**
       * <code>RESET = 4;</code>
       */
      RESET(4),
      /**
       * <code>SERVICE_PROPULSION_GO = 5;</code>
       */
      SERVICE_PROPULSION_GO(5),
      /**
       * <code>SERVICE_PROPULSION_STOP = 6;</code>
       */
      SERVICE_PROPULSION_STOP(6),
      /**
       * <code>NOMINAL_BRAKING = 7;</code>
       */
      NOMINAL_BRAKING(7),
      /**
       * <code>NOMINAL_RETRACT = 8;</code>
       */
      NOMINAL_RETRACT(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ACK = 0;</code>
       */
      public static final int ACK_VALUE = 0;
      /**
       * <code>STOP = 1;</code>
       */
      public static final int STOP_VALUE = 1;
      /**
       * <code>CALIBRATE = 2;</code>
       */
      public static final int CALIBRATE_VALUE = 2;
      /**
       * <code>LAUNCH = 3;</code>
       */
      public static final int LAUNCH_VALUE = 3;
      /**
       * <code>RESET = 4;</code>
       */
      public static final int RESET_VALUE = 4;
      /**
       * <code>SERVICE_PROPULSION_GO = 5;</code>
       */
      public static final int SERVICE_PROPULSION_GO_VALUE = 5;
      /**
       * <code>SERVICE_PROPULSION_STOP = 6;</code>
       */
      public static final int SERVICE_PROPULSION_STOP_VALUE = 6;
      /**
       * <code>NOMINAL_BRAKING = 7;</code>
       */
      public static final int NOMINAL_BRAKING_VALUE = 7;
      /**
       * <code>NOMINAL_RETRACT = 8;</code>
       */
      public static final int NOMINAL_RETRACT_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Command valueOf(int value) {
        return forNumber(value);
      }

      public static Command forNumber(int value) {
        switch (value) {
          case 0: return ACK;
          case 1: return STOP;
          case 2: return CALIBRATE;
          case 3: return LAUNCH;
          case 4: return RESET;
          case 5: return SERVICE_PROPULSION_GO;
          case 6: return SERVICE_PROPULSION_STOP;
          case 7: return NOMINAL_BRAKING;
          case 8: return NOMINAL_RETRACT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Command>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Command> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Command>() {
              public Command findValueByNumber(int number) {
                return Command.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.ServerToClient.getDescriptor().getEnumTypes().get(0);
      }

      private static final Command[] VALUES = values();

      public static Command valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Command(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:telemetry_data.ServerToClient.Command)
    }

    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
     */
    public telemetrydata.TelemetryData.ServerToClient.Command getCommand() {
      @SuppressWarnings("deprecation")
      telemetrydata.TelemetryData.ServerToClient.Command result = telemetrydata.TelemetryData.ServerToClient.Command.valueOf(command_);
      return result == null ? telemetrydata.TelemetryData.ServerToClient.Command.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (command_ != telemetrydata.TelemetryData.ServerToClient.Command.ACK.getNumber()) {
        output.writeEnum(1, command_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (command_ != telemetrydata.TelemetryData.ServerToClient.Command.ACK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof telemetrydata.TelemetryData.ServerToClient)) {
        return super.equals(obj);
      }
      telemetrydata.TelemetryData.ServerToClient other = (telemetrydata.TelemetryData.ServerToClient) obj;

      boolean result = true;
      result = result && command_ == other.command_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ServerToClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(telemetrydata.TelemetryData.ServerToClient prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code telemetry_data.ServerToClient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:telemetry_data.ServerToClient)
        telemetrydata.TelemetryData.ServerToClientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ServerToClient_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ServerToClient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ServerToClient.class, telemetrydata.TelemetryData.ServerToClient.Builder.class);
      }

      // Construct using telemetrydata.TelemetryData.ServerToClient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        command_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ServerToClient_descriptor;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ServerToClient getDefaultInstanceForType() {
        return telemetrydata.TelemetryData.ServerToClient.getDefaultInstance();
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ServerToClient build() {
        telemetrydata.TelemetryData.ServerToClient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ServerToClient buildPartial() {
        telemetrydata.TelemetryData.ServerToClient result = new telemetrydata.TelemetryData.ServerToClient(this);
        result.command_ = command_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telemetrydata.TelemetryData.ServerToClient) {
          return mergeFrom((telemetrydata.TelemetryData.ServerToClient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telemetrydata.TelemetryData.ServerToClient other) {
        if (other == telemetrydata.TelemetryData.ServerToClient.getDefaultInstance()) return this;
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telemetrydata.TelemetryData.ServerToClient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telemetrydata.TelemetryData.ServerToClient) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int command_ = 0;
      /**
       * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
       */
      public telemetrydata.TelemetryData.ServerToClient.Command getCommand() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ServerToClient.Command result = telemetrydata.TelemetryData.ServerToClient.Command.valueOf(command_);
        return result == null ? telemetrydata.TelemetryData.ServerToClient.Command.UNRECOGNIZED : result;
      }
      /**
       * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
       */
      public Builder setCommand(telemetrydata.TelemetryData.ServerToClient.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.telemetry_data.ServerToClient.Command command = 1;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:telemetry_data.ServerToClient)
    }

    // @@protoc_insertion_point(class_scope:telemetry_data.ServerToClient)
    private static final telemetrydata.TelemetryData.ServerToClient DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ServerToClient();
    }

    public static telemetrydata.TelemetryData.ServerToClient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerToClient>
        PARSER = new com.google.protobuf.AbstractParser<ServerToClient>() {
      @java.lang.Override
      public ServerToClient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerToClient(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerToClient> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerToClient> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public telemetrydata.TelemetryData.ServerToClient getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClientToServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    boolean hasNavigation();
    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.Navigation getNavigation();
    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder getNavigationOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    boolean hasStateMachine();
    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.StateMachine getStateMachine();
    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder getStateMachineOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    boolean hasMotors();
    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.Motors getMotors();
    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder getMotorsOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    boolean hasBatteries();
    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.Batteries getBatteries();
    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder getBatteriesOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    boolean hasSensors();
    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.Sensors getSensors();
    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder getSensorsOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    boolean hasTemperature();
    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.Temperature getTemperature();
    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder getTemperatureOrBuilder();

    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    boolean hasEmergencyBrakes();
    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getEmergencyBrakes();
    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder getEmergencyBrakesOrBuilder();
  }
  /**
   * Protobuf type {@code telemetry_data.ClientToServer}
   */
  public  static final class ClientToServer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer)
      ClientToServerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClientToServer.newBuilder() to construct.
    private ClientToServer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientToServer() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClientToServer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              telemetrydata.TelemetryData.ClientToServer.Navigation.Builder subBuilder = null;
              if (navigation_ != null) {
                subBuilder = navigation_.toBuilder();
              }
              navigation_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.Navigation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(navigation_);
                navigation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder subBuilder = null;
              if (stateMachine_ != null) {
                subBuilder = stateMachine_.toBuilder();
              }
              stateMachine_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.StateMachine.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stateMachine_);
                stateMachine_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              telemetrydata.TelemetryData.ClientToServer.Motors.Builder subBuilder = null;
              if (motors_ != null) {
                subBuilder = motors_.toBuilder();
              }
              motors_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.Motors.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motors_);
                motors_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              telemetrydata.TelemetryData.ClientToServer.Batteries.Builder subBuilder = null;
              if (batteries_ != null) {
                subBuilder = batteries_.toBuilder();
              }
              batteries_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.Batteries.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batteries_);
                batteries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              telemetrydata.TelemetryData.ClientToServer.Sensors.Builder subBuilder = null;
              if (sensors_ != null) {
                subBuilder = sensors_.toBuilder();
              }
              sensors_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.Sensors.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensors_);
                sensors_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              telemetrydata.TelemetryData.ClientToServer.Temperature.Builder subBuilder = null;
              if (temperature_ != null) {
                subBuilder = temperature_.toBuilder();
              }
              temperature_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.Temperature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperature_);
                temperature_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder subBuilder = null;
              if (emergencyBrakes_ != null) {
                subBuilder = emergencyBrakes_.toBuilder();
              }
              emergencyBrakes_ = input.readMessage(telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emergencyBrakes_);
                emergencyBrakes_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telemetrydata.TelemetryData.ClientToServer.class, telemetrydata.TelemetryData.ClientToServer.Builder.class);
    }

    /**
     * Protobuf enum {@code telemetry_data.ClientToServer.ModuleStatus}
     */
    public enum ModuleStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>START = 0;</code>
       */
      START(0),
      /**
       * <code>INIT = 1;</code>
       */
      INIT(1),
      /**
       * <code>READY = 2;</code>
       */
      READY(2),
      /**
       * <code>CRITICAL_FAILURE = 3;</code>
       */
      CRITICAL_FAILURE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>START = 0;</code>
       */
      public static final int START_VALUE = 0;
      /**
       * <code>INIT = 1;</code>
       */
      public static final int INIT_VALUE = 1;
      /**
       * <code>READY = 2;</code>
       */
      public static final int READY_VALUE = 2;
      /**
       * <code>CRITICAL_FAILURE = 3;</code>
       */
      public static final int CRITICAL_FAILURE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ModuleStatus valueOf(int value) {
        return forNumber(value);
      }

      public static ModuleStatus forNumber(int value) {
        switch (value) {
          case 0: return START;
          case 1: return INIT;
          case 2: return READY;
          case 3: return CRITICAL_FAILURE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ModuleStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ModuleStatus> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ModuleStatus>() {
              public ModuleStatus findValueByNumber(int number) {
                return ModuleStatus.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.ClientToServer.getDescriptor().getEnumTypes().get(0);
      }

      private static final ModuleStatus[] VALUES = values();

      public static ModuleStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ModuleStatus(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:telemetry_data.ClientToServer.ModuleStatus)
    }

    public interface NavigationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Navigation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      int getModuleStatusValue();
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus();

      /**
       * <code>float distance = 2;</code>
       */
      float getDistance();

      /**
       * <code>float velocity = 3;</code>
       */
      float getVelocity();

      /**
       * <code>float acceleration = 4;</code>
       */
      float getAcceleration();
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.Navigation}
     */
    public  static final class Navigation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Navigation)
        NavigationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Navigation.newBuilder() to construct.
      private Navigation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Navigation() {
        moduleStatus_ = 0;
        distance_ = 0F;
        velocity_ = 0F;
        acceleration_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Navigation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                moduleStatus_ = rawValue;
                break;
              }
              case 21: {

                distance_ = input.readFloat();
                break;
              }
              case 29: {

                velocity_ = input.readFloat();
                break;
              }
              case 37: {

                acceleration_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Navigation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Navigation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.Navigation.class, telemetrydata.TelemetryData.ClientToServer.Navigation.Builder.class);
      }

      public static final int MODULE_STATUS_FIELD_NUMBER = 1;
      private int moduleStatus_;
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public int getModuleStatusValue() {
        return moduleStatus_;
      }
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
        return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
      }

      public static final int DISTANCE_FIELD_NUMBER = 2;
      private float distance_;
      /**
       * <code>float distance = 2;</code>
       */
      public float getDistance() {
        return distance_;
      }

      public static final int VELOCITY_FIELD_NUMBER = 3;
      private float velocity_;
      /**
       * <code>float velocity = 3;</code>
       */
      public float getVelocity() {
        return velocity_;
      }

      public static final int ACCELERATION_FIELD_NUMBER = 4;
      private float acceleration_;
      /**
       * <code>float acceleration = 4;</code>
       */
      public float getAcceleration() {
        return acceleration_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          output.writeEnum(1, moduleStatus_);
        }
        if (distance_ != 0F) {
          output.writeFloat(2, distance_);
        }
        if (velocity_ != 0F) {
          output.writeFloat(3, velocity_);
        }
        if (acceleration_ != 0F) {
          output.writeFloat(4, acceleration_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, moduleStatus_);
        }
        if (distance_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, distance_);
        }
        if (velocity_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, velocity_);
        }
        if (acceleration_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, acceleration_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Navigation)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.Navigation other = (telemetrydata.TelemetryData.ClientToServer.Navigation) obj;

        boolean result = true;
        result = result && moduleStatus_ == other.moduleStatus_;
        result = result && (
            java.lang.Float.floatToIntBits(getDistance())
            == java.lang.Float.floatToIntBits(
                other.getDistance()));
        result = result && (
            java.lang.Float.floatToIntBits(getVelocity())
            == java.lang.Float.floatToIntBits(
                other.getVelocity()));
        result = result && (
            java.lang.Float.floatToIntBits(getAcceleration())
            == java.lang.Float.floatToIntBits(
                other.getAcceleration()));
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODULE_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + moduleStatus_;
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDistance());
        hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVelocity());
        hash = (37 * hash) + ACCELERATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAcceleration());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Navigation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Navigation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Navigation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Navigation)
          telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Navigation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Navigation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Navigation.class, telemetrydata.TelemetryData.ClientToServer.Navigation.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.Navigation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          moduleStatus_ = 0;

          distance_ = 0F;

          velocity_ = 0F;

          acceleration_ = 0F;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Navigation_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Navigation getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.Navigation.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Navigation build() {
          telemetrydata.TelemetryData.ClientToServer.Navigation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Navigation buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.Navigation result = new telemetrydata.TelemetryData.ClientToServer.Navigation(this);
          result.moduleStatus_ = moduleStatus_;
          result.distance_ = distance_;
          result.velocity_ = velocity_;
          result.acceleration_ = acceleration_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.Navigation) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Navigation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Navigation other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.Navigation.getDefaultInstance()) return this;
          if (other.moduleStatus_ != 0) {
            setModuleStatusValue(other.getModuleStatusValue());
          }
          if (other.getDistance() != 0F) {
            setDistance(other.getDistance());
          }
          if (other.getVelocity() != 0F) {
            setVelocity(other.getVelocity());
          }
          if (other.getAcceleration() != 0F) {
            setAcceleration(other.getAcceleration());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.Navigation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Navigation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int moduleStatus_ = 0;
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public int getModuleStatusValue() {
          return moduleStatus_;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatusValue(int value) {
          moduleStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
          @SuppressWarnings("deprecation")
          telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
          return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatus(telemetrydata.TelemetryData.ClientToServer.ModuleStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          moduleStatus_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder clearModuleStatus() {
          
          moduleStatus_ = 0;
          onChanged();
          return this;
        }

        private float distance_ ;
        /**
         * <code>float distance = 2;</code>
         */
        public float getDistance() {
          return distance_;
        }
        /**
         * <code>float distance = 2;</code>
         */
        public Builder setDistance(float value) {
          
          distance_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float distance = 2;</code>
         */
        public Builder clearDistance() {
          
          distance_ = 0F;
          onChanged();
          return this;
        }

        private float velocity_ ;
        /**
         * <code>float velocity = 3;</code>
         */
        public float getVelocity() {
          return velocity_;
        }
        /**
         * <code>float velocity = 3;</code>
         */
        public Builder setVelocity(float value) {
          
          velocity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float velocity = 3;</code>
         */
        public Builder clearVelocity() {
          
          velocity_ = 0F;
          onChanged();
          return this;
        }

        private float acceleration_ ;
        /**
         * <code>float acceleration = 4;</code>
         */
        public float getAcceleration() {
          return acceleration_;
        }
        /**
         * <code>float acceleration = 4;</code>
         */
        public Builder setAcceleration(float value) {
          
          acceleration_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float acceleration = 4;</code>
         */
        public Builder clearAcceleration() {
          
          acceleration_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Navigation)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Navigation)
      private static final telemetrydata.TelemetryData.ClientToServer.Navigation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Navigation();
      }

      public static telemetrydata.TelemetryData.ClientToServer.Navigation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Navigation>
          PARSER = new com.google.protobuf.AbstractParser<Navigation>() {
        @java.lang.Override
        public Navigation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Navigation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Navigation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Navigation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.Navigation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StateMachineOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.StateMachine)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
       */
      int getCurrentStateValue();
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.StateMachine.State getCurrentState();
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.StateMachine}
     */
    public  static final class StateMachine extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.StateMachine)
        StateMachineOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use StateMachine.newBuilder() to construct.
      private StateMachine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StateMachine() {
        currentState_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StateMachine(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                int rawValue = input.readEnum();

                currentState_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_StateMachine_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_StateMachine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.StateMachine.class, telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder.class);
      }

      /**
       * Protobuf enum {@code telemetry_data.ClientToServer.StateMachine.State}
       */
      public enum State
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INVALID = 0;</code>
         */
        INVALID(0),
        /**
         * <code>IDLE = 1;</code>
         */
        IDLE(1),
        /**
         * <code>CALIBRATING = 2;</code>
         */
        CALIBRATING(2),
        /**
         * <code>READY = 3;</code>
         */
        READY(3),
        /**
         * <code>ACCELERATING = 4;</code>
         */
        ACCELERATING(4),
        /**
         * <code>NOMINAL_BRAKING = 5;</code>
         */
        NOMINAL_BRAKING(5),
        /**
         * <code>EMERGENCY_BRAKING = 6;</code>
         */
        EMERGENCY_BRAKING(6),
        /**
         * <code>RUN_COMPLETE = 7;</code>
         */
        RUN_COMPLETE(7),
        /**
         * <code>FAILURE_STOPPED = 8;</code>
         */
        FAILURE_STOPPED(8),
        /**
         * <code>EXITING = 9;</code>
         */
        EXITING(9),
        /**
         * <code>FINISHED = 10;</code>
         */
        FINISHED(10),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>INVALID = 0;</code>
         */
        public static final int INVALID_VALUE = 0;
        /**
         * <code>IDLE = 1;</code>
         */
        public static final int IDLE_VALUE = 1;
        /**
         * <code>CALIBRATING = 2;</code>
         */
        public static final int CALIBRATING_VALUE = 2;
        /**
         * <code>READY = 3;</code>
         */
        public static final int READY_VALUE = 3;
        /**
         * <code>ACCELERATING = 4;</code>
         */
        public static final int ACCELERATING_VALUE = 4;
        /**
         * <code>NOMINAL_BRAKING = 5;</code>
         */
        public static final int NOMINAL_BRAKING_VALUE = 5;
        /**
         * <code>EMERGENCY_BRAKING = 6;</code>
         */
        public static final int EMERGENCY_BRAKING_VALUE = 6;
        /**
         * <code>RUN_COMPLETE = 7;</code>
         */
        public static final int RUN_COMPLETE_VALUE = 7;
        /**
         * <code>FAILURE_STOPPED = 8;</code>
         */
        public static final int FAILURE_STOPPED_VALUE = 8;
        /**
         * <code>EXITING = 9;</code>
         */
        public static final int EXITING_VALUE = 9;
        /**
         * <code>FINISHED = 10;</code>
         */
        public static final int FINISHED_VALUE = 10;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static State valueOf(int value) {
          return forNumber(value);
        }

        public static State forNumber(int value) {
          switch (value) {
            case 0: return INVALID;
            case 1: return IDLE;
            case 2: return CALIBRATING;
            case 3: return READY;
            case 4: return ACCELERATING;
            case 5: return NOMINAL_BRAKING;
            case 6: return EMERGENCY_BRAKING;
            case 7: return RUN_COMPLETE;
            case 8: return FAILURE_STOPPED;
            case 9: return EXITING;
            case 10: return FINISHED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<State>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            State> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<State>() {
                public State findValueByNumber(int number) {
                  return State.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.ClientToServer.StateMachine.getDescriptor().getEnumTypes().get(0);
        }

        private static final State[] VALUES = values();

        public static State valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private State(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:telemetry_data.ClientToServer.StateMachine.State)
      }

      public static final int CURRENT_STATE_FIELD_NUMBER = 2;
      private int currentState_;
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
       */
      public int getCurrentStateValue() {
        return currentState_;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.StateMachine.State getCurrentState() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ClientToServer.StateMachine.State result = telemetrydata.TelemetryData.ClientToServer.StateMachine.State.valueOf(currentState_);
        return result == null ? telemetrydata.TelemetryData.ClientToServer.StateMachine.State.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (currentState_ != telemetrydata.TelemetryData.ClientToServer.StateMachine.State.INVALID.getNumber()) {
          output.writeEnum(2, currentState_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (currentState_ != telemetrydata.TelemetryData.ClientToServer.StateMachine.State.INVALID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, currentState_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.StateMachine)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.StateMachine other = (telemetrydata.TelemetryData.ClientToServer.StateMachine) obj;

        boolean result = true;
        result = result && currentState_ == other.currentState_;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CURRENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + currentState_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.StateMachine parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.StateMachine prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.StateMachine}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.StateMachine)
          telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_StateMachine_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_StateMachine_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.StateMachine.class, telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.StateMachine.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          currentState_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_StateMachine_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.StateMachine getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.StateMachine.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.StateMachine build() {
          telemetrydata.TelemetryData.ClientToServer.StateMachine result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.StateMachine buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.StateMachine result = new telemetrydata.TelemetryData.ClientToServer.StateMachine(this);
          result.currentState_ = currentState_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.StateMachine) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.StateMachine)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.StateMachine other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.StateMachine.getDefaultInstance()) return this;
          if (other.currentState_ != 0) {
            setCurrentStateValue(other.getCurrentStateValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.StateMachine parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.StateMachine) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int currentState_ = 0;
        /**
         * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
         */
        public int getCurrentStateValue() {
          return currentState_;
        }
        /**
         * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
         */
        public Builder setCurrentStateValue(int value) {
          currentState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.StateMachine.State getCurrentState() {
          @SuppressWarnings("deprecation")
          telemetrydata.TelemetryData.ClientToServer.StateMachine.State result = telemetrydata.TelemetryData.ClientToServer.StateMachine.State.valueOf(currentState_);
          return result == null ? telemetrydata.TelemetryData.ClientToServer.StateMachine.State.UNRECOGNIZED : result;
        }
        /**
         * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
         */
        public Builder setCurrentState(telemetrydata.TelemetryData.ClientToServer.StateMachine.State value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          currentState_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.StateMachine.State current_state = 2;</code>
         */
        public Builder clearCurrentState() {
          
          currentState_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.StateMachine)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.StateMachine)
      private static final telemetrydata.TelemetryData.ClientToServer.StateMachine DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.StateMachine();
      }

      public static telemetrydata.TelemetryData.ClientToServer.StateMachine getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StateMachine>
          PARSER = new com.google.protobuf.AbstractParser<StateMachine>() {
        @java.lang.Override
        public StateMachine parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StateMachine(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StateMachine> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StateMachine> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.StateMachine getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MotorsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Motors)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      int getModuleStatusValue();
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus();
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.Motors}
     */
    public  static final class Motors extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Motors)
        MotorsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Motors.newBuilder() to construct.
      private Motors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Motors() {
        moduleStatus_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Motors(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                moduleStatus_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Motors_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Motors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.Motors.class, telemetrydata.TelemetryData.ClientToServer.Motors.Builder.class);
      }

      public static final int MODULE_STATUS_FIELD_NUMBER = 1;
      private int moduleStatus_;
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public int getModuleStatusValue() {
        return moduleStatus_;
      }
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
        return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          output.writeEnum(1, moduleStatus_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, moduleStatus_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Motors)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.Motors other = (telemetrydata.TelemetryData.ClientToServer.Motors) obj;

        boolean result = true;
        result = result && moduleStatus_ == other.moduleStatus_;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODULE_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + moduleStatus_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Motors parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Motors prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Motors}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Motors)
          telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Motors_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Motors_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Motors.class, telemetrydata.TelemetryData.ClientToServer.Motors.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.Motors.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          moduleStatus_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Motors_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Motors getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.Motors.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Motors build() {
          telemetrydata.TelemetryData.ClientToServer.Motors result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Motors buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.Motors result = new telemetrydata.TelemetryData.ClientToServer.Motors(this);
          result.moduleStatus_ = moduleStatus_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.Motors) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Motors)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Motors other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.Motors.getDefaultInstance()) return this;
          if (other.moduleStatus_ != 0) {
            setModuleStatusValue(other.getModuleStatusValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.Motors parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Motors) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int moduleStatus_ = 0;
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public int getModuleStatusValue() {
          return moduleStatus_;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatusValue(int value) {
          moduleStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
          @SuppressWarnings("deprecation")
          telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
          return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatus(telemetrydata.TelemetryData.ClientToServer.ModuleStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          moduleStatus_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder clearModuleStatus() {
          
          moduleStatus_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Motors)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Motors)
      private static final telemetrydata.TelemetryData.ClientToServer.Motors DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Motors();
      }

      public static telemetrydata.TelemetryData.ClientToServer.Motors getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Motors>
          PARSER = new com.google.protobuf.AbstractParser<Motors>() {
        @java.lang.Override
        public Motors parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Motors(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Motors> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Motors> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.Motors getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BatteriesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Batteries)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      int getModuleStatusValue();
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus();

      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> 
          getLowPowerBatteriesList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getLowPowerBatteries(int index);
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      int getLowPowerBatteriesCount();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
          getLowPowerBatteriesOrBuilderList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getLowPowerBatteriesOrBuilder(
          int index);

      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> 
          getHighPowerBatteriesList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getHighPowerBatteries(int index);
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      int getHighPowerBatteriesCount();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
          getHighPowerBatteriesOrBuilderList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getHighPowerBatteriesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.Batteries}
     */
    public  static final class Batteries extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Batteries)
        BatteriesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Batteries.newBuilder() to construct.
      private Batteries(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Batteries() {
        moduleStatus_ = 0;
        lowPowerBatteries_ = java.util.Collections.emptyList();
        highPowerBatteries_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Batteries(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                moduleStatus_ = rawValue;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  lowPowerBatteries_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData>();
                  mutable_bitField0_ |= 0x00000002;
                }
                lowPowerBatteries_.add(
                    input.readMessage(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  highPowerBatteries_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData>();
                  mutable_bitField0_ |= 0x00000004;
                }
                highPowerBatteries_.add(
                    input.readMessage(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            lowPowerBatteries_ = java.util.Collections.unmodifiableList(lowPowerBatteries_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            highPowerBatteries_ = java.util.Collections.unmodifiableList(highPowerBatteries_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.Batteries.class, telemetrydata.TelemetryData.ClientToServer.Batteries.Builder.class);
      }

      public interface BatteryDataOrBuilder extends
          // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Batteries.BatteryData)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>uint32 voltage = 1;</code>
         */
        int getVoltage();

        /**
         * <code>sint32 current = 2;</code>
         */
        int getCurrent();

        /**
         * <code>uint32 charge = 3;</code>
         */
        int getCharge();

        /**
         * <code>int32 average_temperature = 4;</code>
         */
        int getAverageTemperature();

        /**
         * <pre>
         * below only for BMSHP! Value for BMSLP = 0
         * </pre>
         *
         * <code>int32 low_temperature = 5;</code>
         */
        int getLowTemperature();

        /**
         * <code>int32 high_temperature = 6;</code>
         */
        int getHighTemperature();

        /**
         * <code>uint32 low_voltage_cell = 7;</code>
         */
        int getLowVoltageCell();

        /**
         * <code>uint32 high_voltage_cell = 8;</code>
         */
        int getHighVoltageCell();

        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        java.util.List<java.lang.Integer> getIndvVoltageList();
        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        int getIndvVoltageCount();
        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        int getIndvVoltage(int index);
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Batteries.BatteryData}
       */
      public  static final class BatteryData extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Batteries.BatteryData)
          BatteryDataOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use BatteryData.newBuilder() to construct.
        private BatteryData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private BatteryData() {
          voltage_ = 0;
          current_ = 0;
          charge_ = 0;
          averageTemperature_ = 0;
          lowTemperature_ = 0;
          highTemperature_ = 0;
          lowVoltageCell_ = 0;
          highVoltageCell_ = 0;
          indvVoltage_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private BatteryData(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  voltage_ = input.readUInt32();
                  break;
                }
                case 16: {

                  current_ = input.readSInt32();
                  break;
                }
                case 24: {

                  charge_ = input.readUInt32();
                  break;
                }
                case 32: {

                  averageTemperature_ = input.readInt32();
                  break;
                }
                case 40: {

                  lowTemperature_ = input.readInt32();
                  break;
                }
                case 48: {

                  highTemperature_ = input.readInt32();
                  break;
                }
                case 56: {

                  lowVoltageCell_ = input.readUInt32();
                  break;
                }
                case 64: {

                  highVoltageCell_ = input.readUInt32();
                  break;
                }
                case 72: {
                  if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                    indvVoltage_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000100;
                  }
                  indvVoltage_.add(input.readUInt32());
                  break;
                }
                case 74: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                    indvVoltage_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000100;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    indvVoltage_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              indvVoltage_ = java.util.Collections.unmodifiableList(indvVoltage_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.class, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder.class);
        }

        private int bitField0_;
        public static final int VOLTAGE_FIELD_NUMBER = 1;
        private int voltage_;
        /**
         * <code>uint32 voltage = 1;</code>
         */
        public int getVoltage() {
          return voltage_;
        }

        public static final int CURRENT_FIELD_NUMBER = 2;
        private int current_;
        /**
         * <code>sint32 current = 2;</code>
         */
        public int getCurrent() {
          return current_;
        }

        public static final int CHARGE_FIELD_NUMBER = 3;
        private int charge_;
        /**
         * <code>uint32 charge = 3;</code>
         */
        public int getCharge() {
          return charge_;
        }

        public static final int AVERAGE_TEMPERATURE_FIELD_NUMBER = 4;
        private int averageTemperature_;
        /**
         * <code>int32 average_temperature = 4;</code>
         */
        public int getAverageTemperature() {
          return averageTemperature_;
        }

        public static final int LOW_TEMPERATURE_FIELD_NUMBER = 5;
        private int lowTemperature_;
        /**
         * <pre>
         * below only for BMSHP! Value for BMSLP = 0
         * </pre>
         *
         * <code>int32 low_temperature = 5;</code>
         */
        public int getLowTemperature() {
          return lowTemperature_;
        }

        public static final int HIGH_TEMPERATURE_FIELD_NUMBER = 6;
        private int highTemperature_;
        /**
         * <code>int32 high_temperature = 6;</code>
         */
        public int getHighTemperature() {
          return highTemperature_;
        }

        public static final int LOW_VOLTAGE_CELL_FIELD_NUMBER = 7;
        private int lowVoltageCell_;
        /**
         * <code>uint32 low_voltage_cell = 7;</code>
         */
        public int getLowVoltageCell() {
          return lowVoltageCell_;
        }

        public static final int HIGH_VOLTAGE_CELL_FIELD_NUMBER = 8;
        private int highVoltageCell_;
        /**
         * <code>uint32 high_voltage_cell = 8;</code>
         */
        public int getHighVoltageCell() {
          return highVoltageCell_;
        }

        public static final int INDV_VOLTAGE_FIELD_NUMBER = 9;
        private java.util.List<java.lang.Integer> indvVoltage_;
        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        public java.util.List<java.lang.Integer>
            getIndvVoltageList() {
          return indvVoltage_;
        }
        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        public int getIndvVoltageCount() {
          return indvVoltage_.size();
        }
        /**
         * <code>repeated uint32 indv_voltage = 9;</code>
         */
        public int getIndvVoltage(int index) {
          return indvVoltage_.get(index);
        }
        private int indvVoltageMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (voltage_ != 0) {
            output.writeUInt32(1, voltage_);
          }
          if (current_ != 0) {
            output.writeSInt32(2, current_);
          }
          if (charge_ != 0) {
            output.writeUInt32(3, charge_);
          }
          if (averageTemperature_ != 0) {
            output.writeInt32(4, averageTemperature_);
          }
          if (lowTemperature_ != 0) {
            output.writeInt32(5, lowTemperature_);
          }
          if (highTemperature_ != 0) {
            output.writeInt32(6, highTemperature_);
          }
          if (lowVoltageCell_ != 0) {
            output.writeUInt32(7, lowVoltageCell_);
          }
          if (highVoltageCell_ != 0) {
            output.writeUInt32(8, highVoltageCell_);
          }
          if (getIndvVoltageList().size() > 0) {
            output.writeUInt32NoTag(74);
            output.writeUInt32NoTag(indvVoltageMemoizedSerializedSize);
          }
          for (int i = 0; i < indvVoltage_.size(); i++) {
            output.writeUInt32NoTag(indvVoltage_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (voltage_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, voltage_);
          }
          if (current_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(2, current_);
          }
          if (charge_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, charge_);
          }
          if (averageTemperature_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, averageTemperature_);
          }
          if (lowTemperature_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, lowTemperature_);
          }
          if (highTemperature_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(6, highTemperature_);
          }
          if (lowVoltageCell_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, lowVoltageCell_);
          }
          if (highVoltageCell_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, highVoltageCell_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < indvVoltage_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(indvVoltage_.get(i));
            }
            size += dataSize;
            if (!getIndvVoltageList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            indvVoltageMemoizedSerializedSize = dataSize;
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData)) {
            return super.equals(obj);
          }
          telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData other = (telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData) obj;

          boolean result = true;
          result = result && (getVoltage()
              == other.getVoltage());
          result = result && (getCurrent()
              == other.getCurrent());
          result = result && (getCharge()
              == other.getCharge());
          result = result && (getAverageTemperature()
              == other.getAverageTemperature());
          result = result && (getLowTemperature()
              == other.getLowTemperature());
          result = result && (getHighTemperature()
              == other.getHighTemperature());
          result = result && (getLowVoltageCell()
              == other.getLowVoltageCell());
          result = result && (getHighVoltageCell()
              == other.getHighVoltageCell());
          result = result && getIndvVoltageList()
              .equals(other.getIndvVoltageList());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getVoltage();
          hash = (37 * hash) + CURRENT_FIELD_NUMBER;
          hash = (53 * hash) + getCurrent();
          hash = (37 * hash) + CHARGE_FIELD_NUMBER;
          hash = (53 * hash) + getCharge();
          hash = (37 * hash) + AVERAGE_TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getAverageTemperature();
          hash = (37 * hash) + LOW_TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getLowTemperature();
          hash = (37 * hash) + HIGH_TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getHighTemperature();
          hash = (37 * hash) + LOW_VOLTAGE_CELL_FIELD_NUMBER;
          hash = (53 * hash) + getLowVoltageCell();
          hash = (37 * hash) + HIGH_VOLTAGE_CELL_FIELD_NUMBER;
          hash = (53 * hash) + getHighVoltageCell();
          if (getIndvVoltageCount() > 0) {
            hash = (37 * hash) + INDV_VOLTAGE_FIELD_NUMBER;
            hash = (53 * hash) + getIndvVoltageList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code telemetry_data.ClientToServer.Batteries.BatteryData}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Batteries.BatteryData)
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.class, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder.class);
          }

          // Construct using telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            voltage_ = 0;

            current_ = 0;

            charge_ = 0;

            averageTemperature_ = 0;

            lowTemperature_ = 0;

            highTemperature_ = 0;

            lowVoltageCell_ = 0;

            highVoltageCell_ = 0;

            indvVoltage_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000100);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor;
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getDefaultInstanceForType() {
            return telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance();
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData build() {
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData buildPartial() {
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData result = new telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.voltage_ = voltage_;
            result.current_ = current_;
            result.charge_ = charge_;
            result.averageTemperature_ = averageTemperature_;
            result.lowTemperature_ = lowTemperature_;
            result.highTemperature_ = highTemperature_;
            result.lowVoltageCell_ = lowVoltageCell_;
            result.highVoltageCell_ = highVoltageCell_;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              indvVoltage_ = java.util.Collections.unmodifiableList(indvVoltage_);
              bitField0_ = (bitField0_ & ~0x00000100);
            }
            result.indvVoltage_ = indvVoltage_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData) {
              return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData other) {
            if (other == telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance()) return this;
            if (other.getVoltage() != 0) {
              setVoltage(other.getVoltage());
            }
            if (other.getCurrent() != 0) {
              setCurrent(other.getCurrent());
            }
            if (other.getCharge() != 0) {
              setCharge(other.getCharge());
            }
            if (other.getAverageTemperature() != 0) {
              setAverageTemperature(other.getAverageTemperature());
            }
            if (other.getLowTemperature() != 0) {
              setLowTemperature(other.getLowTemperature());
            }
            if (other.getHighTemperature() != 0) {
              setHighTemperature(other.getHighTemperature());
            }
            if (other.getLowVoltageCell() != 0) {
              setLowVoltageCell(other.getLowVoltageCell());
            }
            if (other.getHighVoltageCell() != 0) {
              setHighVoltageCell(other.getHighVoltageCell());
            }
            if (!other.indvVoltage_.isEmpty()) {
              if (indvVoltage_.isEmpty()) {
                indvVoltage_ = other.indvVoltage_;
                bitField0_ = (bitField0_ & ~0x00000100);
              } else {
                ensureIndvVoltageIsMutable();
                indvVoltage_.addAll(other.indvVoltage_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int voltage_ ;
          /**
           * <code>uint32 voltage = 1;</code>
           */
          public int getVoltage() {
            return voltage_;
          }
          /**
           * <code>uint32 voltage = 1;</code>
           */
          public Builder setVoltage(int value) {
            
            voltage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>uint32 voltage = 1;</code>
           */
          public Builder clearVoltage() {
            
            voltage_ = 0;
            onChanged();
            return this;
          }

          private int current_ ;
          /**
           * <code>sint32 current = 2;</code>
           */
          public int getCurrent() {
            return current_;
          }
          /**
           * <code>sint32 current = 2;</code>
           */
          public Builder setCurrent(int value) {
            
            current_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>sint32 current = 2;</code>
           */
          public Builder clearCurrent() {
            
            current_ = 0;
            onChanged();
            return this;
          }

          private int charge_ ;
          /**
           * <code>uint32 charge = 3;</code>
           */
          public int getCharge() {
            return charge_;
          }
          /**
           * <code>uint32 charge = 3;</code>
           */
          public Builder setCharge(int value) {
            
            charge_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>uint32 charge = 3;</code>
           */
          public Builder clearCharge() {
            
            charge_ = 0;
            onChanged();
            return this;
          }

          private int averageTemperature_ ;
          /**
           * <code>int32 average_temperature = 4;</code>
           */
          public int getAverageTemperature() {
            return averageTemperature_;
          }
          /**
           * <code>int32 average_temperature = 4;</code>
           */
          public Builder setAverageTemperature(int value) {
            
            averageTemperature_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 average_temperature = 4;</code>
           */
          public Builder clearAverageTemperature() {
            
            averageTemperature_ = 0;
            onChanged();
            return this;
          }

          private int lowTemperature_ ;
          /**
           * <pre>
           * below only for BMSHP! Value for BMSLP = 0
           * </pre>
           *
           * <code>int32 low_temperature = 5;</code>
           */
          public int getLowTemperature() {
            return lowTemperature_;
          }
          /**
           * <pre>
           * below only for BMSHP! Value for BMSLP = 0
           * </pre>
           *
           * <code>int32 low_temperature = 5;</code>
           */
          public Builder setLowTemperature(int value) {
            
            lowTemperature_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * below only for BMSHP! Value for BMSLP = 0
           * </pre>
           *
           * <code>int32 low_temperature = 5;</code>
           */
          public Builder clearLowTemperature() {
            
            lowTemperature_ = 0;
            onChanged();
            return this;
          }

          private int highTemperature_ ;
          /**
           * <code>int32 high_temperature = 6;</code>
           */
          public int getHighTemperature() {
            return highTemperature_;
          }
          /**
           * <code>int32 high_temperature = 6;</code>
           */
          public Builder setHighTemperature(int value) {
            
            highTemperature_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 high_temperature = 6;</code>
           */
          public Builder clearHighTemperature() {
            
            highTemperature_ = 0;
            onChanged();
            return this;
          }

          private int lowVoltageCell_ ;
          /**
           * <code>uint32 low_voltage_cell = 7;</code>
           */
          public int getLowVoltageCell() {
            return lowVoltageCell_;
          }
          /**
           * <code>uint32 low_voltage_cell = 7;</code>
           */
          public Builder setLowVoltageCell(int value) {
            
            lowVoltageCell_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>uint32 low_voltage_cell = 7;</code>
           */
          public Builder clearLowVoltageCell() {
            
            lowVoltageCell_ = 0;
            onChanged();
            return this;
          }

          private int highVoltageCell_ ;
          /**
           * <code>uint32 high_voltage_cell = 8;</code>
           */
          public int getHighVoltageCell() {
            return highVoltageCell_;
          }
          /**
           * <code>uint32 high_voltage_cell = 8;</code>
           */
          public Builder setHighVoltageCell(int value) {
            
            highVoltageCell_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>uint32 high_voltage_cell = 8;</code>
           */
          public Builder clearHighVoltageCell() {
            
            highVoltageCell_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> indvVoltage_ = java.util.Collections.emptyList();
          private void ensureIndvVoltageIsMutable() {
            if (!((bitField0_ & 0x00000100) == 0x00000100)) {
              indvVoltage_ = new java.util.ArrayList<java.lang.Integer>(indvVoltage_);
              bitField0_ |= 0x00000100;
             }
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public java.util.List<java.lang.Integer>
              getIndvVoltageList() {
            return java.util.Collections.unmodifiableList(indvVoltage_);
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public int getIndvVoltageCount() {
            return indvVoltage_.size();
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public int getIndvVoltage(int index) {
            return indvVoltage_.get(index);
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public Builder setIndvVoltage(
              int index, int value) {
            ensureIndvVoltageIsMutable();
            indvVoltage_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public Builder addIndvVoltage(int value) {
            ensureIndvVoltageIsMutable();
            indvVoltage_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public Builder addAllIndvVoltage(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureIndvVoltageIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, indvVoltage_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 indv_voltage = 9;</code>
           */
          public Builder clearIndvVoltage() {
            indvVoltage_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000100);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Batteries.BatteryData)
        }

        // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Batteries.BatteryData)
        private static final telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData();
        }

        public static telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BatteryData>
            PARSER = new com.google.protobuf.AbstractParser<BatteryData>() {
          @java.lang.Override
          public BatteryData parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new BatteryData(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<BatteryData> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BatteryData> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int MODULE_STATUS_FIELD_NUMBER = 1;
      private int moduleStatus_;
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public int getModuleStatusValue() {
        return moduleStatus_;
      }
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
        return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
      }

      public static final int LOW_POWER_BATTERIES_FIELD_NUMBER = 2;
      private java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> lowPowerBatteries_;
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> getLowPowerBatteriesList() {
        return lowPowerBatteries_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
          getLowPowerBatteriesOrBuilderList() {
        return lowPowerBatteries_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      public int getLowPowerBatteriesCount() {
        return lowPowerBatteries_.size();
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getLowPowerBatteries(int index) {
        return lowPowerBatteries_.get(index);
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getLowPowerBatteriesOrBuilder(
          int index) {
        return lowPowerBatteries_.get(index);
      }

      public static final int HIGH_POWER_BATTERIES_FIELD_NUMBER = 3;
      private java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> highPowerBatteries_;
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> getHighPowerBatteriesList() {
        return highPowerBatteries_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
          getHighPowerBatteriesOrBuilderList() {
        return highPowerBatteries_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      public int getHighPowerBatteriesCount() {
        return highPowerBatteries_.size();
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getHighPowerBatteries(int index) {
        return highPowerBatteries_.get(index);
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getHighPowerBatteriesOrBuilder(
          int index) {
        return highPowerBatteries_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          output.writeEnum(1, moduleStatus_);
        }
        for (int i = 0; i < lowPowerBatteries_.size(); i++) {
          output.writeMessage(2, lowPowerBatteries_.get(i));
        }
        for (int i = 0; i < highPowerBatteries_.size(); i++) {
          output.writeMessage(3, highPowerBatteries_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, moduleStatus_);
        }
        for (int i = 0; i < lowPowerBatteries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, lowPowerBatteries_.get(i));
        }
        for (int i = 0; i < highPowerBatteries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, highPowerBatteries_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Batteries)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.Batteries other = (telemetrydata.TelemetryData.ClientToServer.Batteries) obj;

        boolean result = true;
        result = result && moduleStatus_ == other.moduleStatus_;
        result = result && getLowPowerBatteriesList()
            .equals(other.getLowPowerBatteriesList());
        result = result && getHighPowerBatteriesList()
            .equals(other.getHighPowerBatteriesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODULE_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + moduleStatus_;
        if (getLowPowerBatteriesCount() > 0) {
          hash = (37 * hash) + LOW_POWER_BATTERIES_FIELD_NUMBER;
          hash = (53 * hash) + getLowPowerBatteriesList().hashCode();
        }
        if (getHighPowerBatteriesCount() > 0) {
          hash = (37 * hash) + HIGH_POWER_BATTERIES_FIELD_NUMBER;
          hash = (53 * hash) + getHighPowerBatteriesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Batteries parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Batteries prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Batteries}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Batteries)
          telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Batteries.class, telemetrydata.TelemetryData.ClientToServer.Batteries.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.Batteries.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getLowPowerBatteriesFieldBuilder();
            getHighPowerBatteriesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          moduleStatus_ = 0;

          if (lowPowerBatteriesBuilder_ == null) {
            lowPowerBatteries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            lowPowerBatteriesBuilder_.clear();
          }
          if (highPowerBatteriesBuilder_ == null) {
            highPowerBatteries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            highPowerBatteriesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Batteries_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Batteries getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.Batteries.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Batteries build() {
          telemetrydata.TelemetryData.ClientToServer.Batteries result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Batteries buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.Batteries result = new telemetrydata.TelemetryData.ClientToServer.Batteries(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.moduleStatus_ = moduleStatus_;
          if (lowPowerBatteriesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              lowPowerBatteries_ = java.util.Collections.unmodifiableList(lowPowerBatteries_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.lowPowerBatteries_ = lowPowerBatteries_;
          } else {
            result.lowPowerBatteries_ = lowPowerBatteriesBuilder_.build();
          }
          if (highPowerBatteriesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              highPowerBatteries_ = java.util.Collections.unmodifiableList(highPowerBatteries_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.highPowerBatteries_ = highPowerBatteries_;
          } else {
            result.highPowerBatteries_ = highPowerBatteriesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.Batteries) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Batteries)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Batteries other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.Batteries.getDefaultInstance()) return this;
          if (other.moduleStatus_ != 0) {
            setModuleStatusValue(other.getModuleStatusValue());
          }
          if (lowPowerBatteriesBuilder_ == null) {
            if (!other.lowPowerBatteries_.isEmpty()) {
              if (lowPowerBatteries_.isEmpty()) {
                lowPowerBatteries_ = other.lowPowerBatteries_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureLowPowerBatteriesIsMutable();
                lowPowerBatteries_.addAll(other.lowPowerBatteries_);
              }
              onChanged();
            }
          } else {
            if (!other.lowPowerBatteries_.isEmpty()) {
              if (lowPowerBatteriesBuilder_.isEmpty()) {
                lowPowerBatteriesBuilder_.dispose();
                lowPowerBatteriesBuilder_ = null;
                lowPowerBatteries_ = other.lowPowerBatteries_;
                bitField0_ = (bitField0_ & ~0x00000002);
                lowPowerBatteriesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getLowPowerBatteriesFieldBuilder() : null;
              } else {
                lowPowerBatteriesBuilder_.addAllMessages(other.lowPowerBatteries_);
              }
            }
          }
          if (highPowerBatteriesBuilder_ == null) {
            if (!other.highPowerBatteries_.isEmpty()) {
              if (highPowerBatteries_.isEmpty()) {
                highPowerBatteries_ = other.highPowerBatteries_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureHighPowerBatteriesIsMutable();
                highPowerBatteries_.addAll(other.highPowerBatteries_);
              }
              onChanged();
            }
          } else {
            if (!other.highPowerBatteries_.isEmpty()) {
              if (highPowerBatteriesBuilder_.isEmpty()) {
                highPowerBatteriesBuilder_.dispose();
                highPowerBatteriesBuilder_ = null;
                highPowerBatteries_ = other.highPowerBatteries_;
                bitField0_ = (bitField0_ & ~0x00000004);
                highPowerBatteriesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getHighPowerBatteriesFieldBuilder() : null;
              } else {
                highPowerBatteriesBuilder_.addAllMessages(other.highPowerBatteries_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.Batteries parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Batteries) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int moduleStatus_ = 0;
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public int getModuleStatusValue() {
          return moduleStatus_;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatusValue(int value) {
          moduleStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
          @SuppressWarnings("deprecation")
          telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
          return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatus(telemetrydata.TelemetryData.ClientToServer.ModuleStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          moduleStatus_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder clearModuleStatus() {
          
          moduleStatus_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> lowPowerBatteries_ =
          java.util.Collections.emptyList();
        private void ensureLowPowerBatteriesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            lowPowerBatteries_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData>(lowPowerBatteries_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> lowPowerBatteriesBuilder_;

        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> getLowPowerBatteriesList() {
          if (lowPowerBatteriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(lowPowerBatteries_);
          } else {
            return lowPowerBatteriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public int getLowPowerBatteriesCount() {
          if (lowPowerBatteriesBuilder_ == null) {
            return lowPowerBatteries_.size();
          } else {
            return lowPowerBatteriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getLowPowerBatteries(int index) {
          if (lowPowerBatteriesBuilder_ == null) {
            return lowPowerBatteries_.get(index);
          } else {
            return lowPowerBatteriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder setLowPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (lowPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.set(index, value);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder setLowPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (lowPowerBatteriesBuilder_ == null) {
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.set(index, builderForValue.build());
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder addLowPowerBatteries(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (lowPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.add(value);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder addLowPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (lowPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.add(index, value);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder addLowPowerBatteries(
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (lowPowerBatteriesBuilder_ == null) {
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.add(builderForValue.build());
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder addLowPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (lowPowerBatteriesBuilder_ == null) {
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.add(index, builderForValue.build());
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder addAllLowPowerBatteries(
            java.lang.Iterable<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> values) {
          if (lowPowerBatteriesBuilder_ == null) {
            ensureLowPowerBatteriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, lowPowerBatteries_);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder clearLowPowerBatteries() {
          if (lowPowerBatteriesBuilder_ == null) {
            lowPowerBatteries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public Builder removeLowPowerBatteries(int index) {
          if (lowPowerBatteriesBuilder_ == null) {
            ensureLowPowerBatteriesIsMutable();
            lowPowerBatteries_.remove(index);
            onChanged();
          } else {
            lowPowerBatteriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder getLowPowerBatteriesBuilder(
            int index) {
          return getLowPowerBatteriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getLowPowerBatteriesOrBuilder(
            int index) {
          if (lowPowerBatteriesBuilder_ == null) {
            return lowPowerBatteries_.get(index);  } else {
            return lowPowerBatteriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
             getLowPowerBatteriesOrBuilderList() {
          if (lowPowerBatteriesBuilder_ != null) {
            return lowPowerBatteriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(lowPowerBatteries_);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder addLowPowerBatteriesBuilder() {
          return getLowPowerBatteriesFieldBuilder().addBuilder(
              telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder addLowPowerBatteriesBuilder(
            int index) {
          return getLowPowerBatteriesFieldBuilder().addBuilder(
              index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData low_power_batteries = 2;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder> 
             getLowPowerBatteriesBuilderList() {
          return getLowPowerBatteriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
            getLowPowerBatteriesFieldBuilder() {
          if (lowPowerBatteriesBuilder_ == null) {
            lowPowerBatteriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder>(
                    lowPowerBatteries_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            lowPowerBatteries_ = null;
          }
          return lowPowerBatteriesBuilder_;
        }

        private java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> highPowerBatteries_ =
          java.util.Collections.emptyList();
        private void ensureHighPowerBatteriesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            highPowerBatteries_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData>(highPowerBatteries_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> highPowerBatteriesBuilder_;

        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> getHighPowerBatteriesList() {
          if (highPowerBatteriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(highPowerBatteries_);
          } else {
            return highPowerBatteriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public int getHighPowerBatteriesCount() {
          if (highPowerBatteriesBuilder_ == null) {
            return highPowerBatteries_.size();
          } else {
            return highPowerBatteriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData getHighPowerBatteries(int index) {
          if (highPowerBatteriesBuilder_ == null) {
            return highPowerBatteries_.get(index);
          } else {
            return highPowerBatteriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder setHighPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (highPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.set(index, value);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder setHighPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (highPowerBatteriesBuilder_ == null) {
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.set(index, builderForValue.build());
            onChanged();
          } else {
            highPowerBatteriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder addHighPowerBatteries(telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (highPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.add(value);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder addHighPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData value) {
          if (highPowerBatteriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.add(index, value);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder addHighPowerBatteries(
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (highPowerBatteriesBuilder_ == null) {
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.add(builderForValue.build());
            onChanged();
          } else {
            highPowerBatteriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder addHighPowerBatteries(
            int index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder builderForValue) {
          if (highPowerBatteriesBuilder_ == null) {
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.add(index, builderForValue.build());
            onChanged();
          } else {
            highPowerBatteriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder addAllHighPowerBatteries(
            java.lang.Iterable<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData> values) {
          if (highPowerBatteriesBuilder_ == null) {
            ensureHighPowerBatteriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, highPowerBatteries_);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder clearHighPowerBatteries() {
          if (highPowerBatteriesBuilder_ == null) {
            highPowerBatteries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public Builder removeHighPowerBatteries(int index) {
          if (highPowerBatteriesBuilder_ == null) {
            ensureHighPowerBatteriesIsMutable();
            highPowerBatteries_.remove(index);
            onChanged();
          } else {
            highPowerBatteriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder getHighPowerBatteriesBuilder(
            int index) {
          return getHighPowerBatteriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder getHighPowerBatteriesOrBuilder(
            int index) {
          if (highPowerBatteriesBuilder_ == null) {
            return highPowerBatteries_.get(index);  } else {
            return highPowerBatteriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
             getHighPowerBatteriesOrBuilderList() {
          if (highPowerBatteriesBuilder_ != null) {
            return highPowerBatteriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(highPowerBatteries_);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder addHighPowerBatteriesBuilder() {
          return getHighPowerBatteriesFieldBuilder().addBuilder(
              telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder addHighPowerBatteriesBuilder(
            int index) {
          return getHighPowerBatteriesFieldBuilder().addBuilder(
              index, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Batteries.BatteryData high_power_batteries = 3;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder> 
             getHighPowerBatteriesBuilderList() {
          return getHighPowerBatteriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder> 
            getHighPowerBatteriesFieldBuilder() {
          if (highPowerBatteriesBuilder_ == null) {
            highPowerBatteriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryData.Builder, telemetrydata.TelemetryData.ClientToServer.Batteries.BatteryDataOrBuilder>(
                    highPowerBatteries_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            highPowerBatteries_ = null;
          }
          return highPowerBatteriesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Batteries)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Batteries)
      private static final telemetrydata.TelemetryData.ClientToServer.Batteries DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Batteries();
      }

      public static telemetrydata.TelemetryData.ClientToServer.Batteries getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Batteries>
          PARSER = new com.google.protobuf.AbstractParser<Batteries>() {
        @java.lang.Override
        public Batteries parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Batteries(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Batteries> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Batteries> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.Batteries getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SensorsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Sensors)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      int getModuleStatusValue();
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus();

      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> 
          getImuList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getImu(int index);
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      int getImuCount();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder> 
          getImuOrBuilderList();
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder getImuOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.Sensors}
     */
    public  static final class Sensors extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Sensors)
        SensorsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Sensors.newBuilder() to construct.
      private Sensors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Sensors() {
        moduleStatus_ = 0;
        imu_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Sensors(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                moduleStatus_ = rawValue;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  imu_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData>();
                  mutable_bitField0_ |= 0x00000002;
                }
                imu_.add(
                    input.readMessage(telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            imu_ = java.util.Collections.unmodifiableList(imu_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.Sensors.class, telemetrydata.TelemetryData.ClientToServer.Sensors.Builder.class);
      }

      public interface ImuDataOrBuilder extends
          // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Sensors.ImuData)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bool operational = 1;</code>
         */
        boolean getOperational();

        /**
         * <code>repeated float acc = 2;</code>
         */
        java.util.List<java.lang.Float> getAccList();
        /**
         * <code>repeated float acc = 2;</code>
         */
        int getAccCount();
        /**
         * <code>repeated float acc = 2;</code>
         */
        float getAcc(int index);
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Sensors.ImuData}
       */
      public  static final class ImuData extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Sensors.ImuData)
          ImuDataOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ImuData.newBuilder() to construct.
        private ImuData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ImuData() {
          operational_ = false;
          acc_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ImuData(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  operational_ = input.readBool();
                  break;
                }
                case 21: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    acc_ = new java.util.ArrayList<java.lang.Float>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  acc_.add(input.readFloat());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    acc_ = new java.util.ArrayList<java.lang.Float>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    acc_.add(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              acc_ = java.util.Collections.unmodifiableList(acc_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_ImuData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.class, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder.class);
        }

        private int bitField0_;
        public static final int OPERATIONAL_FIELD_NUMBER = 1;
        private boolean operational_;
        /**
         * <code>bool operational = 1;</code>
         */
        public boolean getOperational() {
          return operational_;
        }

        public static final int ACC_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Float> acc_;
        /**
         * <code>repeated float acc = 2;</code>
         */
        public java.util.List<java.lang.Float>
            getAccList() {
          return acc_;
        }
        /**
         * <code>repeated float acc = 2;</code>
         */
        public int getAccCount() {
          return acc_.size();
        }
        /**
         * <code>repeated float acc = 2;</code>
         */
        public float getAcc(int index) {
          return acc_.get(index);
        }
        private int accMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (operational_ != false) {
            output.writeBool(1, operational_);
          }
          if (getAccList().size() > 0) {
            output.writeUInt32NoTag(18);
            output.writeUInt32NoTag(accMemoizedSerializedSize);
          }
          for (int i = 0; i < acc_.size(); i++) {
            output.writeFloatNoTag(acc_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (operational_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(1, operational_);
          }
          {
            int dataSize = 0;
            dataSize = 4 * getAccList().size();
            size += dataSize;
            if (!getAccList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            accMemoizedSerializedSize = dataSize;
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData)) {
            return super.equals(obj);
          }
          telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData other = (telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData) obj;

          boolean result = true;
          result = result && (getOperational()
              == other.getOperational());
          result = result && getAccList()
              .equals(other.getAccList());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + OPERATIONAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getOperational());
          if (getAccCount() > 0) {
            hash = (37 * hash) + ACC_FIELD_NUMBER;
            hash = (53 * hash) + getAccList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code telemetry_data.ClientToServer.Sensors.ImuData}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Sensors.ImuData)
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_ImuData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.class, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder.class);
          }

          // Construct using telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            operational_ = false;

            acc_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor;
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getDefaultInstanceForType() {
            return telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.getDefaultInstance();
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData build() {
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData buildPartial() {
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData result = new telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.operational_ = operational_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              acc_ = java.util.Collections.unmodifiableList(acc_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.acc_ = acc_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData) {
              return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData other) {
            if (other == telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.getDefaultInstance()) return this;
            if (other.getOperational() != false) {
              setOperational(other.getOperational());
            }
            if (!other.acc_.isEmpty()) {
              if (acc_.isEmpty()) {
                acc_ = other.acc_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAccIsMutable();
                acc_.addAll(other.acc_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private boolean operational_ ;
          /**
           * <code>bool operational = 1;</code>
           */
          public boolean getOperational() {
            return operational_;
          }
          /**
           * <code>bool operational = 1;</code>
           */
          public Builder setOperational(boolean value) {
            
            operational_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool operational = 1;</code>
           */
          public Builder clearOperational() {
            
            operational_ = false;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Float> acc_ = java.util.Collections.emptyList();
          private void ensureAccIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              acc_ = new java.util.ArrayList<java.lang.Float>(acc_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public java.util.List<java.lang.Float>
              getAccList() {
            return java.util.Collections.unmodifiableList(acc_);
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public int getAccCount() {
            return acc_.size();
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public float getAcc(int index) {
            return acc_.get(index);
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public Builder setAcc(
              int index, float value) {
            ensureAccIsMutable();
            acc_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public Builder addAcc(float value) {
            ensureAccIsMutable();
            acc_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public Builder addAllAcc(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureAccIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, acc_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float acc = 2;</code>
           */
          public Builder clearAcc() {
            acc_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Sensors.ImuData)
        }

        // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Sensors.ImuData)
        private static final telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData();
        }

        public static telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ImuData>
            PARSER = new com.google.protobuf.AbstractParser<ImuData>() {
          @java.lang.Override
          public ImuData parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ImuData(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ImuData> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ImuData> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int MODULE_STATUS_FIELD_NUMBER = 1;
      private int moduleStatus_;
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public int getModuleStatusValue() {
        return moduleStatus_;
      }
      /**
       * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
        @SuppressWarnings("deprecation")
        telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
        return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
      }

      public static final int IMU_FIELD_NUMBER = 2;
      private java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> imu_;
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      public java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> getImuList() {
        return imu_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder> 
          getImuOrBuilderList() {
        return imu_;
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      public int getImuCount() {
        return imu_.size();
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getImu(int index) {
        return imu_.get(index);
      }
      /**
       * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder getImuOrBuilder(
          int index) {
        return imu_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          output.writeEnum(1, moduleStatus_);
        }
        for (int i = 0; i < imu_.size(); i++) {
          output.writeMessage(2, imu_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (moduleStatus_ != telemetrydata.TelemetryData.ClientToServer.ModuleStatus.START.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, moduleStatus_);
        }
        for (int i = 0; i < imu_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, imu_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Sensors)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.Sensors other = (telemetrydata.TelemetryData.ClientToServer.Sensors) obj;

        boolean result = true;
        result = result && moduleStatus_ == other.moduleStatus_;
        result = result && getImuList()
            .equals(other.getImuList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODULE_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + moduleStatus_;
        if (getImuCount() > 0) {
          hash = (37 * hash) + IMU_FIELD_NUMBER;
          hash = (53 * hash) + getImuList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Sensors parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Sensors prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Sensors}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Sensors)
          telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Sensors.class, telemetrydata.TelemetryData.ClientToServer.Sensors.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.Sensors.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getImuFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          moduleStatus_ = 0;

          if (imuBuilder_ == null) {
            imu_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            imuBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Sensors_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Sensors getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.Sensors.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Sensors build() {
          telemetrydata.TelemetryData.ClientToServer.Sensors result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Sensors buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.Sensors result = new telemetrydata.TelemetryData.ClientToServer.Sensors(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.moduleStatus_ = moduleStatus_;
          if (imuBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              imu_ = java.util.Collections.unmodifiableList(imu_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.imu_ = imu_;
          } else {
            result.imu_ = imuBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.Sensors) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Sensors)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Sensors other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.Sensors.getDefaultInstance()) return this;
          if (other.moduleStatus_ != 0) {
            setModuleStatusValue(other.getModuleStatusValue());
          }
          if (imuBuilder_ == null) {
            if (!other.imu_.isEmpty()) {
              if (imu_.isEmpty()) {
                imu_ = other.imu_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureImuIsMutable();
                imu_.addAll(other.imu_);
              }
              onChanged();
            }
          } else {
            if (!other.imu_.isEmpty()) {
              if (imuBuilder_.isEmpty()) {
                imuBuilder_.dispose();
                imuBuilder_ = null;
                imu_ = other.imu_;
                bitField0_ = (bitField0_ & ~0x00000002);
                imuBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getImuFieldBuilder() : null;
              } else {
                imuBuilder_.addAllMessages(other.imu_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.Sensors parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Sensors) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int moduleStatus_ = 0;
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public int getModuleStatusValue() {
          return moduleStatus_;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatusValue(int value) {
          moduleStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.ModuleStatus getModuleStatus() {
          @SuppressWarnings("deprecation")
          telemetrydata.TelemetryData.ClientToServer.ModuleStatus result = telemetrydata.TelemetryData.ClientToServer.ModuleStatus.valueOf(moduleStatus_);
          return result == null ? telemetrydata.TelemetryData.ClientToServer.ModuleStatus.UNRECOGNIZED : result;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder setModuleStatus(telemetrydata.TelemetryData.ClientToServer.ModuleStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          moduleStatus_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.telemetry_data.ClientToServer.ModuleStatus module_status = 1;</code>
         */
        public Builder clearModuleStatus() {
          
          moduleStatus_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> imu_ =
          java.util.Collections.emptyList();
        private void ensureImuIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            imu_ = new java.util.ArrayList<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData>(imu_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder> imuBuilder_;

        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> getImuList() {
          if (imuBuilder_ == null) {
            return java.util.Collections.unmodifiableList(imu_);
          } else {
            return imuBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public int getImuCount() {
          if (imuBuilder_ == null) {
            return imu_.size();
          } else {
            return imuBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData getImu(int index) {
          if (imuBuilder_ == null) {
            return imu_.get(index);
          } else {
            return imuBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder setImu(
            int index, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData value) {
          if (imuBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureImuIsMutable();
            imu_.set(index, value);
            onChanged();
          } else {
            imuBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder setImu(
            int index, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder builderForValue) {
          if (imuBuilder_ == null) {
            ensureImuIsMutable();
            imu_.set(index, builderForValue.build());
            onChanged();
          } else {
            imuBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder addImu(telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData value) {
          if (imuBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureImuIsMutable();
            imu_.add(value);
            onChanged();
          } else {
            imuBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder addImu(
            int index, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData value) {
          if (imuBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureImuIsMutable();
            imu_.add(index, value);
            onChanged();
          } else {
            imuBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder addImu(
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder builderForValue) {
          if (imuBuilder_ == null) {
            ensureImuIsMutable();
            imu_.add(builderForValue.build());
            onChanged();
          } else {
            imuBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder addImu(
            int index, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder builderForValue) {
          if (imuBuilder_ == null) {
            ensureImuIsMutable();
            imu_.add(index, builderForValue.build());
            onChanged();
          } else {
            imuBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder addAllImu(
            java.lang.Iterable<? extends telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData> values) {
          if (imuBuilder_ == null) {
            ensureImuIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, imu_);
            onChanged();
          } else {
            imuBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder clearImu() {
          if (imuBuilder_ == null) {
            imu_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            imuBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public Builder removeImu(int index) {
          if (imuBuilder_ == null) {
            ensureImuIsMutable();
            imu_.remove(index);
            onChanged();
          } else {
            imuBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder getImuBuilder(
            int index) {
          return getImuFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder getImuOrBuilder(
            int index) {
          if (imuBuilder_ == null) {
            return imu_.get(index);  } else {
            return imuBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public java.util.List<? extends telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder> 
             getImuOrBuilderList() {
          if (imuBuilder_ != null) {
            return imuBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(imu_);
          }
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder addImuBuilder() {
          return getImuFieldBuilder().addBuilder(
              telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder addImuBuilder(
            int index) {
          return getImuFieldBuilder().addBuilder(
              index, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.getDefaultInstance());
        }
        /**
         * <code>repeated .telemetry_data.ClientToServer.Sensors.ImuData imu = 2;</code>
         */
        public java.util.List<telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder> 
             getImuBuilderList() {
          return getImuFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder> 
            getImuFieldBuilder() {
          if (imuBuilder_ == null) {
            imuBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuData.Builder, telemetrydata.TelemetryData.ClientToServer.Sensors.ImuDataOrBuilder>(
                    imu_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            imu_ = null;
          }
          return imuBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Sensors)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Sensors)
      private static final telemetrydata.TelemetryData.ClientToServer.Sensors DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Sensors();
      }

      public static telemetrydata.TelemetryData.ClientToServer.Sensors getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Sensors>
          PARSER = new com.google.protobuf.AbstractParser<Sensors>() {
        @java.lang.Override
        public Sensors parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sensors(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Sensors> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Sensors> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.Sensors getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TemperatureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.Temperature)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * not uint32 becuase temp *just might maybe* be negative, however unlikely
       * </pre>
       *
       * <code>sint32 temperature = 1;</code>
       */
      int getTemperature();
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.Temperature}
     */
    public  static final class Temperature extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.Temperature)
        TemperatureOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Temperature.newBuilder() to construct.
      private Temperature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Temperature() {
        temperature_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Temperature(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                temperature_ = input.readSInt32();
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Temperature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Temperature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.Temperature.class, telemetrydata.TelemetryData.ClientToServer.Temperature.Builder.class);
      }

      public static final int TEMPERATURE_FIELD_NUMBER = 1;
      private int temperature_;
      /**
       * <pre>
       * not uint32 becuase temp *just might maybe* be negative, however unlikely
       * </pre>
       *
       * <code>sint32 temperature = 1;</code>
       */
      public int getTemperature() {
        return temperature_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (temperature_ != 0) {
          output.writeSInt32(1, temperature_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (temperature_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, temperature_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.Temperature)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.Temperature other = (telemetrydata.TelemetryData.ClientToServer.Temperature) obj;

        boolean result = true;
        result = result && (getTemperature()
            == other.getTemperature());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperature();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.Temperature parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.Temperature prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.Temperature}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.Temperature)
          telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Temperature_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Temperature_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.Temperature.class, telemetrydata.TelemetryData.ClientToServer.Temperature.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.Temperature.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          temperature_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_Temperature_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Temperature getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.Temperature.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Temperature build() {
          telemetrydata.TelemetryData.ClientToServer.Temperature result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.Temperature buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.Temperature result = new telemetrydata.TelemetryData.ClientToServer.Temperature(this);
          result.temperature_ = temperature_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.Temperature) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.Temperature)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.Temperature other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.Temperature.getDefaultInstance()) return this;
          if (other.getTemperature() != 0) {
            setTemperature(other.getTemperature());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.Temperature parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.Temperature) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int temperature_ ;
        /**
         * <pre>
         * not uint32 becuase temp *just might maybe* be negative, however unlikely
         * </pre>
         *
         * <code>sint32 temperature = 1;</code>
         */
        public int getTemperature() {
          return temperature_;
        }
        /**
         * <pre>
         * not uint32 becuase temp *just might maybe* be negative, however unlikely
         * </pre>
         *
         * <code>sint32 temperature = 1;</code>
         */
        public Builder setTemperature(int value) {
          
          temperature_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * not uint32 becuase temp *just might maybe* be negative, however unlikely
         * </pre>
         *
         * <code>sint32 temperature = 1;</code>
         */
        public Builder clearTemperature() {
          
          temperature_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.Temperature)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.Temperature)
      private static final telemetrydata.TelemetryData.ClientToServer.Temperature DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.Temperature();
      }

      public static telemetrydata.TelemetryData.ClientToServer.Temperature getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Temperature>
          PARSER = new com.google.protobuf.AbstractParser<Temperature>() {
        @java.lang.Override
        public Temperature parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Temperature(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Temperature> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Temperature> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.Temperature getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface EmergencyBrakesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:telemetry_data.ClientToServer.EmergencyBrakes)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated bool brakes = 1;</code>
       */
      java.util.List<java.lang.Boolean> getBrakesList();
      /**
       * <code>repeated bool brakes = 1;</code>
       */
      int getBrakesCount();
      /**
       * <code>repeated bool brakes = 1;</code>
       */
      boolean getBrakes(int index);
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer.EmergencyBrakes}
     */
    public  static final class EmergencyBrakes extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:telemetry_data.ClientToServer.EmergencyBrakes)
        EmergencyBrakesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EmergencyBrakes.newBuilder() to construct.
      private EmergencyBrakes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EmergencyBrakes() {
        brakes_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private EmergencyBrakes(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  brakes_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000001;
                }
                brakes_.add(input.readBool());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  brakes_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  brakes_.add(input.readBool());
                }
                input.popLimit(limit);
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            brakes_ = java.util.Collections.unmodifiableList(brakes_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_EmergencyBrakes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.class, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder.class);
      }

      public static final int BRAKES_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Boolean> brakes_;
      /**
       * <code>repeated bool brakes = 1;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBrakesList() {
        return brakes_;
      }
      /**
       * <code>repeated bool brakes = 1;</code>
       */
      public int getBrakesCount() {
        return brakes_.size();
      }
      /**
       * <code>repeated bool brakes = 1;</code>
       */
      public boolean getBrakes(int index) {
        return brakes_.get(index);
      }
      private int brakesMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getBrakesList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(brakesMemoizedSerializedSize);
        }
        for (int i = 0; i < brakes_.size(); i++) {
          output.writeBoolNoTag(brakes_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 1 * getBrakesList().size();
          size += dataSize;
          if (!getBrakesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          brakesMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes)) {
          return super.equals(obj);
        }
        telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes other = (telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes) obj;

        boolean result = true;
        result = result && getBrakesList()
            .equals(other.getBrakesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getBrakesCount() > 0) {
          hash = (37 * hash) + BRAKES_FIELD_NUMBER;
          hash = (53 * hash) + getBrakesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code telemetry_data.ClientToServer.EmergencyBrakes}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer.EmergencyBrakes)
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_EmergencyBrakes_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.class, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder.class);
        }

        // Construct using telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          brakes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getDefaultInstanceForType() {
          return telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.getDefaultInstance();
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes build() {
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes buildPartial() {
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes result = new telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            brakes_ = java.util.Collections.unmodifiableList(brakes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.brakes_ = brakes_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes) {
            return mergeFrom((telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes other) {
          if (other == telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.getDefaultInstance()) return this;
          if (!other.brakes_.isEmpty()) {
            if (brakes_.isEmpty()) {
              brakes_ = other.brakes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBrakesIsMutable();
              brakes_.addAll(other.brakes_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<java.lang.Boolean> brakes_ = java.util.Collections.emptyList();
        private void ensureBrakesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            brakes_ = new java.util.ArrayList<java.lang.Boolean>(brakes_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public java.util.List<java.lang.Boolean>
            getBrakesList() {
          return java.util.Collections.unmodifiableList(brakes_);
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public int getBrakesCount() {
          return brakes_.size();
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public boolean getBrakes(int index) {
          return brakes_.get(index);
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public Builder setBrakes(
            int index, boolean value) {
          ensureBrakesIsMutable();
          brakes_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public Builder addBrakes(boolean value) {
          ensureBrakesIsMutable();
          brakes_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public Builder addAllBrakes(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureBrakesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, brakes_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool brakes = 1;</code>
         */
        public Builder clearBrakes() {
          brakes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer.EmergencyBrakes)
      }

      // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer.EmergencyBrakes)
      private static final telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes();
      }

      public static telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<EmergencyBrakes>
          PARSER = new com.google.protobuf.AbstractParser<EmergencyBrakes>() {
        @java.lang.Override
        public EmergencyBrakes parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EmergencyBrakes(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<EmergencyBrakes> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EmergencyBrakes> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NAVIGATION_FIELD_NUMBER = 1;
    private telemetrydata.TelemetryData.ClientToServer.Navigation navigation_;
    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    public boolean hasNavigation() {
      return navigation_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.Navigation getNavigation() {
      return navigation_ == null ? telemetrydata.TelemetryData.ClientToServer.Navigation.getDefaultInstance() : navigation_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder getNavigationOrBuilder() {
      return getNavigation();
    }

    public static final int STATE_MACHINE_FIELD_NUMBER = 2;
    private telemetrydata.TelemetryData.ClientToServer.StateMachine stateMachine_;
    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    public boolean hasStateMachine() {
      return stateMachine_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.StateMachine getStateMachine() {
      return stateMachine_ == null ? telemetrydata.TelemetryData.ClientToServer.StateMachine.getDefaultInstance() : stateMachine_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder getStateMachineOrBuilder() {
      return getStateMachine();
    }

    public static final int MOTORS_FIELD_NUMBER = 3;
    private telemetrydata.TelemetryData.ClientToServer.Motors motors_;
    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    public boolean hasMotors() {
      return motors_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.Motors getMotors() {
      return motors_ == null ? telemetrydata.TelemetryData.ClientToServer.Motors.getDefaultInstance() : motors_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder getMotorsOrBuilder() {
      return getMotors();
    }

    public static final int BATTERIES_FIELD_NUMBER = 4;
    private telemetrydata.TelemetryData.ClientToServer.Batteries batteries_;
    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    public boolean hasBatteries() {
      return batteries_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.Batteries getBatteries() {
      return batteries_ == null ? telemetrydata.TelemetryData.ClientToServer.Batteries.getDefaultInstance() : batteries_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder getBatteriesOrBuilder() {
      return getBatteries();
    }

    public static final int SENSORS_FIELD_NUMBER = 5;
    private telemetrydata.TelemetryData.ClientToServer.Sensors sensors_;
    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    public boolean hasSensors() {
      return sensors_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.Sensors getSensors() {
      return sensors_ == null ? telemetrydata.TelemetryData.ClientToServer.Sensors.getDefaultInstance() : sensors_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder getSensorsOrBuilder() {
      return getSensors();
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 6;
    private telemetrydata.TelemetryData.ClientToServer.Temperature temperature_;
    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    public boolean hasTemperature() {
      return temperature_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.Temperature getTemperature() {
      return temperature_ == null ? telemetrydata.TelemetryData.ClientToServer.Temperature.getDefaultInstance() : temperature_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder getTemperatureOrBuilder() {
      return getTemperature();
    }

    public static final int EMERGENCY_BRAKES_FIELD_NUMBER = 7;
    private telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes emergencyBrakes_;
    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    public boolean hasEmergencyBrakes() {
      return emergencyBrakes_ != null;
    }
    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getEmergencyBrakes() {
      return emergencyBrakes_ == null ? telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.getDefaultInstance() : emergencyBrakes_;
    }
    /**
     * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
     */
    public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder getEmergencyBrakesOrBuilder() {
      return getEmergencyBrakes();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (navigation_ != null) {
        output.writeMessage(1, getNavigation());
      }
      if (stateMachine_ != null) {
        output.writeMessage(2, getStateMachine());
      }
      if (motors_ != null) {
        output.writeMessage(3, getMotors());
      }
      if (batteries_ != null) {
        output.writeMessage(4, getBatteries());
      }
      if (sensors_ != null) {
        output.writeMessage(5, getSensors());
      }
      if (temperature_ != null) {
        output.writeMessage(6, getTemperature());
      }
      if (emergencyBrakes_ != null) {
        output.writeMessage(7, getEmergencyBrakes());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (navigation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNavigation());
      }
      if (stateMachine_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStateMachine());
      }
      if (motors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMotors());
      }
      if (batteries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBatteries());
      }
      if (sensors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSensors());
      }
      if (temperature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTemperature());
      }
      if (emergencyBrakes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getEmergencyBrakes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof telemetrydata.TelemetryData.ClientToServer)) {
        return super.equals(obj);
      }
      telemetrydata.TelemetryData.ClientToServer other = (telemetrydata.TelemetryData.ClientToServer) obj;

      boolean result = true;
      result = result && (hasNavigation() == other.hasNavigation());
      if (hasNavigation()) {
        result = result && getNavigation()
            .equals(other.getNavigation());
      }
      result = result && (hasStateMachine() == other.hasStateMachine());
      if (hasStateMachine()) {
        result = result && getStateMachine()
            .equals(other.getStateMachine());
      }
      result = result && (hasMotors() == other.hasMotors());
      if (hasMotors()) {
        result = result && getMotors()
            .equals(other.getMotors());
      }
      result = result && (hasBatteries() == other.hasBatteries());
      if (hasBatteries()) {
        result = result && getBatteries()
            .equals(other.getBatteries());
      }
      result = result && (hasSensors() == other.hasSensors());
      if (hasSensors()) {
        result = result && getSensors()
            .equals(other.getSensors());
      }
      result = result && (hasTemperature() == other.hasTemperature());
      if (hasTemperature()) {
        result = result && getTemperature()
            .equals(other.getTemperature());
      }
      result = result && (hasEmergencyBrakes() == other.hasEmergencyBrakes());
      if (hasEmergencyBrakes()) {
        result = result && getEmergencyBrakes()
            .equals(other.getEmergencyBrakes());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNavigation()) {
        hash = (37 * hash) + NAVIGATION_FIELD_NUMBER;
        hash = (53 * hash) + getNavigation().hashCode();
      }
      if (hasStateMachine()) {
        hash = (37 * hash) + STATE_MACHINE_FIELD_NUMBER;
        hash = (53 * hash) + getStateMachine().hashCode();
      }
      if (hasMotors()) {
        hash = (37 * hash) + MOTORS_FIELD_NUMBER;
        hash = (53 * hash) + getMotors().hashCode();
      }
      if (hasBatteries()) {
        hash = (37 * hash) + BATTERIES_FIELD_NUMBER;
        hash = (53 * hash) + getBatteries().hashCode();
      }
      if (hasSensors()) {
        hash = (37 * hash) + SENSORS_FIELD_NUMBER;
        hash = (53 * hash) + getSensors().hashCode();
      }
      if (hasTemperature()) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperature().hashCode();
      }
      if (hasEmergencyBrakes()) {
        hash = (37 * hash) + EMERGENCY_BRAKES_FIELD_NUMBER;
        hash = (53 * hash) + getEmergencyBrakes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static telemetrydata.TelemetryData.ClientToServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(telemetrydata.TelemetryData.ClientToServer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code telemetry_data.ClientToServer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:telemetry_data.ClientToServer)
        telemetrydata.TelemetryData.ClientToServerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telemetrydata.TelemetryData.ClientToServer.class, telemetrydata.TelemetryData.ClientToServer.Builder.class);
      }

      // Construct using telemetrydata.TelemetryData.ClientToServer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (navigationBuilder_ == null) {
          navigation_ = null;
        } else {
          navigation_ = null;
          navigationBuilder_ = null;
        }
        if (stateMachineBuilder_ == null) {
          stateMachine_ = null;
        } else {
          stateMachine_ = null;
          stateMachineBuilder_ = null;
        }
        if (motorsBuilder_ == null) {
          motors_ = null;
        } else {
          motors_ = null;
          motorsBuilder_ = null;
        }
        if (batteriesBuilder_ == null) {
          batteries_ = null;
        } else {
          batteries_ = null;
          batteriesBuilder_ = null;
        }
        if (sensorsBuilder_ == null) {
          sensors_ = null;
        } else {
          sensors_ = null;
          sensorsBuilder_ = null;
        }
        if (temperatureBuilder_ == null) {
          temperature_ = null;
        } else {
          temperature_ = null;
          temperatureBuilder_ = null;
        }
        if (emergencyBrakesBuilder_ == null) {
          emergencyBrakes_ = null;
        } else {
          emergencyBrakes_ = null;
          emergencyBrakesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telemetrydata.TelemetryData.internal_static_telemetry_data_ClientToServer_descriptor;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer getDefaultInstanceForType() {
        return telemetrydata.TelemetryData.ClientToServer.getDefaultInstance();
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer build() {
        telemetrydata.TelemetryData.ClientToServer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public telemetrydata.TelemetryData.ClientToServer buildPartial() {
        telemetrydata.TelemetryData.ClientToServer result = new telemetrydata.TelemetryData.ClientToServer(this);
        if (navigationBuilder_ == null) {
          result.navigation_ = navigation_;
        } else {
          result.navigation_ = navigationBuilder_.build();
        }
        if (stateMachineBuilder_ == null) {
          result.stateMachine_ = stateMachine_;
        } else {
          result.stateMachine_ = stateMachineBuilder_.build();
        }
        if (motorsBuilder_ == null) {
          result.motors_ = motors_;
        } else {
          result.motors_ = motorsBuilder_.build();
        }
        if (batteriesBuilder_ == null) {
          result.batteries_ = batteries_;
        } else {
          result.batteries_ = batteriesBuilder_.build();
        }
        if (sensorsBuilder_ == null) {
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        if (temperatureBuilder_ == null) {
          result.temperature_ = temperature_;
        } else {
          result.temperature_ = temperatureBuilder_.build();
        }
        if (emergencyBrakesBuilder_ == null) {
          result.emergencyBrakes_ = emergencyBrakes_;
        } else {
          result.emergencyBrakes_ = emergencyBrakesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telemetrydata.TelemetryData.ClientToServer) {
          return mergeFrom((telemetrydata.TelemetryData.ClientToServer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telemetrydata.TelemetryData.ClientToServer other) {
        if (other == telemetrydata.TelemetryData.ClientToServer.getDefaultInstance()) return this;
        if (other.hasNavigation()) {
          mergeNavigation(other.getNavigation());
        }
        if (other.hasStateMachine()) {
          mergeStateMachine(other.getStateMachine());
        }
        if (other.hasMotors()) {
          mergeMotors(other.getMotors());
        }
        if (other.hasBatteries()) {
          mergeBatteries(other.getBatteries());
        }
        if (other.hasSensors()) {
          mergeSensors(other.getSensors());
        }
        if (other.hasTemperature()) {
          mergeTemperature(other.getTemperature());
        }
        if (other.hasEmergencyBrakes()) {
          mergeEmergencyBrakes(other.getEmergencyBrakes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telemetrydata.TelemetryData.ClientToServer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telemetrydata.TelemetryData.ClientToServer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private telemetrydata.TelemetryData.ClientToServer.Navigation navigation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Navigation, telemetrydata.TelemetryData.ClientToServer.Navigation.Builder, telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder> navigationBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public boolean hasNavigation() {
        return navigationBuilder_ != null || navigation_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Navigation getNavigation() {
        if (navigationBuilder_ == null) {
          return navigation_ == null ? telemetrydata.TelemetryData.ClientToServer.Navigation.getDefaultInstance() : navigation_;
        } else {
          return navigationBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public Builder setNavigation(telemetrydata.TelemetryData.ClientToServer.Navigation value) {
        if (navigationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          navigation_ = value;
          onChanged();
        } else {
          navigationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public Builder setNavigation(
          telemetrydata.TelemetryData.ClientToServer.Navigation.Builder builderForValue) {
        if (navigationBuilder_ == null) {
          navigation_ = builderForValue.build();
          onChanged();
        } else {
          navigationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public Builder mergeNavigation(telemetrydata.TelemetryData.ClientToServer.Navigation value) {
        if (navigationBuilder_ == null) {
          if (navigation_ != null) {
            navigation_ =
              telemetrydata.TelemetryData.ClientToServer.Navigation.newBuilder(navigation_).mergeFrom(value).buildPartial();
          } else {
            navigation_ = value;
          }
          onChanged();
        } else {
          navigationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public Builder clearNavigation() {
        if (navigationBuilder_ == null) {
          navigation_ = null;
          onChanged();
        } else {
          navigation_ = null;
          navigationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Navigation.Builder getNavigationBuilder() {
        
        onChanged();
        return getNavigationFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder getNavigationOrBuilder() {
        if (navigationBuilder_ != null) {
          return navigationBuilder_.getMessageOrBuilder();
        } else {
          return navigation_ == null ?
              telemetrydata.TelemetryData.ClientToServer.Navigation.getDefaultInstance() : navigation_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Navigation navigation = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Navigation, telemetrydata.TelemetryData.ClientToServer.Navigation.Builder, telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder> 
          getNavigationFieldBuilder() {
        if (navigationBuilder_ == null) {
          navigationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.Navigation, telemetrydata.TelemetryData.ClientToServer.Navigation.Builder, telemetrydata.TelemetryData.ClientToServer.NavigationOrBuilder>(
                  getNavigation(),
                  getParentForChildren(),
                  isClean());
          navigation_ = null;
        }
        return navigationBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.StateMachine stateMachine_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.StateMachine, telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder, telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder> stateMachineBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public boolean hasStateMachine() {
        return stateMachineBuilder_ != null || stateMachine_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.StateMachine getStateMachine() {
        if (stateMachineBuilder_ == null) {
          return stateMachine_ == null ? telemetrydata.TelemetryData.ClientToServer.StateMachine.getDefaultInstance() : stateMachine_;
        } else {
          return stateMachineBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public Builder setStateMachine(telemetrydata.TelemetryData.ClientToServer.StateMachine value) {
        if (stateMachineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stateMachine_ = value;
          onChanged();
        } else {
          stateMachineBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public Builder setStateMachine(
          telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder builderForValue) {
        if (stateMachineBuilder_ == null) {
          stateMachine_ = builderForValue.build();
          onChanged();
        } else {
          stateMachineBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public Builder mergeStateMachine(telemetrydata.TelemetryData.ClientToServer.StateMachine value) {
        if (stateMachineBuilder_ == null) {
          if (stateMachine_ != null) {
            stateMachine_ =
              telemetrydata.TelemetryData.ClientToServer.StateMachine.newBuilder(stateMachine_).mergeFrom(value).buildPartial();
          } else {
            stateMachine_ = value;
          }
          onChanged();
        } else {
          stateMachineBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public Builder clearStateMachine() {
        if (stateMachineBuilder_ == null) {
          stateMachine_ = null;
          onChanged();
        } else {
          stateMachine_ = null;
          stateMachineBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder getStateMachineBuilder() {
        
        onChanged();
        return getStateMachineFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder getStateMachineOrBuilder() {
        if (stateMachineBuilder_ != null) {
          return stateMachineBuilder_.getMessageOrBuilder();
        } else {
          return stateMachine_ == null ?
              telemetrydata.TelemetryData.ClientToServer.StateMachine.getDefaultInstance() : stateMachine_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.StateMachine state_machine = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.StateMachine, telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder, telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder> 
          getStateMachineFieldBuilder() {
        if (stateMachineBuilder_ == null) {
          stateMachineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.StateMachine, telemetrydata.TelemetryData.ClientToServer.StateMachine.Builder, telemetrydata.TelemetryData.ClientToServer.StateMachineOrBuilder>(
                  getStateMachine(),
                  getParentForChildren(),
                  isClean());
          stateMachine_ = null;
        }
        return stateMachineBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.Motors motors_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Motors, telemetrydata.TelemetryData.ClientToServer.Motors.Builder, telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder> motorsBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public boolean hasMotors() {
        return motorsBuilder_ != null || motors_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Motors getMotors() {
        if (motorsBuilder_ == null) {
          return motors_ == null ? telemetrydata.TelemetryData.ClientToServer.Motors.getDefaultInstance() : motors_;
        } else {
          return motorsBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public Builder setMotors(telemetrydata.TelemetryData.ClientToServer.Motors value) {
        if (motorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motors_ = value;
          onChanged();
        } else {
          motorsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public Builder setMotors(
          telemetrydata.TelemetryData.ClientToServer.Motors.Builder builderForValue) {
        if (motorsBuilder_ == null) {
          motors_ = builderForValue.build();
          onChanged();
        } else {
          motorsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public Builder mergeMotors(telemetrydata.TelemetryData.ClientToServer.Motors value) {
        if (motorsBuilder_ == null) {
          if (motors_ != null) {
            motors_ =
              telemetrydata.TelemetryData.ClientToServer.Motors.newBuilder(motors_).mergeFrom(value).buildPartial();
          } else {
            motors_ = value;
          }
          onChanged();
        } else {
          motorsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public Builder clearMotors() {
        if (motorsBuilder_ == null) {
          motors_ = null;
          onChanged();
        } else {
          motors_ = null;
          motorsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Motors.Builder getMotorsBuilder() {
        
        onChanged();
        return getMotorsFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder getMotorsOrBuilder() {
        if (motorsBuilder_ != null) {
          return motorsBuilder_.getMessageOrBuilder();
        } else {
          return motors_ == null ?
              telemetrydata.TelemetryData.ClientToServer.Motors.getDefaultInstance() : motors_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Motors motors = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Motors, telemetrydata.TelemetryData.ClientToServer.Motors.Builder, telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder> 
          getMotorsFieldBuilder() {
        if (motorsBuilder_ == null) {
          motorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.Motors, telemetrydata.TelemetryData.ClientToServer.Motors.Builder, telemetrydata.TelemetryData.ClientToServer.MotorsOrBuilder>(
                  getMotors(),
                  getParentForChildren(),
                  isClean());
          motors_ = null;
        }
        return motorsBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.Batteries batteries_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Batteries, telemetrydata.TelemetryData.ClientToServer.Batteries.Builder, telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder> batteriesBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public boolean hasBatteries() {
        return batteriesBuilder_ != null || batteries_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries getBatteries() {
        if (batteriesBuilder_ == null) {
          return batteries_ == null ? telemetrydata.TelemetryData.ClientToServer.Batteries.getDefaultInstance() : batteries_;
        } else {
          return batteriesBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public Builder setBatteries(telemetrydata.TelemetryData.ClientToServer.Batteries value) {
        if (batteriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batteries_ = value;
          onChanged();
        } else {
          batteriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public Builder setBatteries(
          telemetrydata.TelemetryData.ClientToServer.Batteries.Builder builderForValue) {
        if (batteriesBuilder_ == null) {
          batteries_ = builderForValue.build();
          onChanged();
        } else {
          batteriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public Builder mergeBatteries(telemetrydata.TelemetryData.ClientToServer.Batteries value) {
        if (batteriesBuilder_ == null) {
          if (batteries_ != null) {
            batteries_ =
              telemetrydata.TelemetryData.ClientToServer.Batteries.newBuilder(batteries_).mergeFrom(value).buildPartial();
          } else {
            batteries_ = value;
          }
          onChanged();
        } else {
          batteriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public Builder clearBatteries() {
        if (batteriesBuilder_ == null) {
          batteries_ = null;
          onChanged();
        } else {
          batteries_ = null;
          batteriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Batteries.Builder getBatteriesBuilder() {
        
        onChanged();
        return getBatteriesFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder getBatteriesOrBuilder() {
        if (batteriesBuilder_ != null) {
          return batteriesBuilder_.getMessageOrBuilder();
        } else {
          return batteries_ == null ?
              telemetrydata.TelemetryData.ClientToServer.Batteries.getDefaultInstance() : batteries_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Batteries batteries = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Batteries, telemetrydata.TelemetryData.ClientToServer.Batteries.Builder, telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder> 
          getBatteriesFieldBuilder() {
        if (batteriesBuilder_ == null) {
          batteriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.Batteries, telemetrydata.TelemetryData.ClientToServer.Batteries.Builder, telemetrydata.TelemetryData.ClientToServer.BatteriesOrBuilder>(
                  getBatteries(),
                  getParentForChildren(),
                  isClean());
          batteries_ = null;
        }
        return batteriesBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.Sensors sensors_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Sensors, telemetrydata.TelemetryData.ClientToServer.Sensors.Builder, telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder> sensorsBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public boolean hasSensors() {
        return sensorsBuilder_ != null || sensors_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Sensors getSensors() {
        if (sensorsBuilder_ == null) {
          return sensors_ == null ? telemetrydata.TelemetryData.ClientToServer.Sensors.getDefaultInstance() : sensors_;
        } else {
          return sensorsBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public Builder setSensors(telemetrydata.TelemetryData.ClientToServer.Sensors value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensors_ = value;
          onChanged();
        } else {
          sensorsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public Builder setSensors(
          telemetrydata.TelemetryData.ClientToServer.Sensors.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          sensors_ = builderForValue.build();
          onChanged();
        } else {
          sensorsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public Builder mergeSensors(telemetrydata.TelemetryData.ClientToServer.Sensors value) {
        if (sensorsBuilder_ == null) {
          if (sensors_ != null) {
            sensors_ =
              telemetrydata.TelemetryData.ClientToServer.Sensors.newBuilder(sensors_).mergeFrom(value).buildPartial();
          } else {
            sensors_ = value;
          }
          onChanged();
        } else {
          sensorsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = null;
          onChanged();
        } else {
          sensors_ = null;
          sensorsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Sensors.Builder getSensorsBuilder() {
        
        onChanged();
        return getSensorsFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder getSensorsOrBuilder() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilder();
        } else {
          return sensors_ == null ?
              telemetrydata.TelemetryData.ClientToServer.Sensors.getDefaultInstance() : sensors_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Sensors sensors = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Sensors, telemetrydata.TelemetryData.ClientToServer.Sensors.Builder, telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.Sensors, telemetrydata.TelemetryData.ClientToServer.Sensors.Builder, telemetrydata.TelemetryData.ClientToServer.SensorsOrBuilder>(
                  getSensors(),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.Temperature temperature_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Temperature, telemetrydata.TelemetryData.ClientToServer.Temperature.Builder, telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder> temperatureBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public boolean hasTemperature() {
        return temperatureBuilder_ != null || temperature_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Temperature getTemperature() {
        if (temperatureBuilder_ == null) {
          return temperature_ == null ? telemetrydata.TelemetryData.ClientToServer.Temperature.getDefaultInstance() : temperature_;
        } else {
          return temperatureBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public Builder setTemperature(telemetrydata.TelemetryData.ClientToServer.Temperature value) {
        if (temperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperature_ = value;
          onChanged();
        } else {
          temperatureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public Builder setTemperature(
          telemetrydata.TelemetryData.ClientToServer.Temperature.Builder builderForValue) {
        if (temperatureBuilder_ == null) {
          temperature_ = builderForValue.build();
          onChanged();
        } else {
          temperatureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public Builder mergeTemperature(telemetrydata.TelemetryData.ClientToServer.Temperature value) {
        if (temperatureBuilder_ == null) {
          if (temperature_ != null) {
            temperature_ =
              telemetrydata.TelemetryData.ClientToServer.Temperature.newBuilder(temperature_).mergeFrom(value).buildPartial();
          } else {
            temperature_ = value;
          }
          onChanged();
        } else {
          temperatureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public Builder clearTemperature() {
        if (temperatureBuilder_ == null) {
          temperature_ = null;
          onChanged();
        } else {
          temperature_ = null;
          temperatureBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.Temperature.Builder getTemperatureBuilder() {
        
        onChanged();
        return getTemperatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder getTemperatureOrBuilder() {
        if (temperatureBuilder_ != null) {
          return temperatureBuilder_.getMessageOrBuilder();
        } else {
          return temperature_ == null ?
              telemetrydata.TelemetryData.ClientToServer.Temperature.getDefaultInstance() : temperature_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.Temperature temperature = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.Temperature, telemetrydata.TelemetryData.ClientToServer.Temperature.Builder, telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder> 
          getTemperatureFieldBuilder() {
        if (temperatureBuilder_ == null) {
          temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.Temperature, telemetrydata.TelemetryData.ClientToServer.Temperature.Builder, telemetrydata.TelemetryData.ClientToServer.TemperatureOrBuilder>(
                  getTemperature(),
                  getParentForChildren(),
                  isClean());
          temperature_ = null;
        }
        return temperatureBuilder_;
      }

      private telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes emergencyBrakes_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder> emergencyBrakesBuilder_;
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public boolean hasEmergencyBrakes() {
        return emergencyBrakesBuilder_ != null || emergencyBrakes_ != null;
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes getEmergencyBrakes() {
        if (emergencyBrakesBuilder_ == null) {
          return emergencyBrakes_ == null ? telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.getDefaultInstance() : emergencyBrakes_;
        } else {
          return emergencyBrakesBuilder_.getMessage();
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public Builder setEmergencyBrakes(telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes value) {
        if (emergencyBrakesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emergencyBrakes_ = value;
          onChanged();
        } else {
          emergencyBrakesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public Builder setEmergencyBrakes(
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder builderForValue) {
        if (emergencyBrakesBuilder_ == null) {
          emergencyBrakes_ = builderForValue.build();
          onChanged();
        } else {
          emergencyBrakesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public Builder mergeEmergencyBrakes(telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes value) {
        if (emergencyBrakesBuilder_ == null) {
          if (emergencyBrakes_ != null) {
            emergencyBrakes_ =
              telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.newBuilder(emergencyBrakes_).mergeFrom(value).buildPartial();
          } else {
            emergencyBrakes_ = value;
          }
          onChanged();
        } else {
          emergencyBrakesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public Builder clearEmergencyBrakes() {
        if (emergencyBrakesBuilder_ == null) {
          emergencyBrakes_ = null;
          onChanged();
        } else {
          emergencyBrakes_ = null;
          emergencyBrakesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder getEmergencyBrakesBuilder() {
        
        onChanged();
        return getEmergencyBrakesFieldBuilder().getBuilder();
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      public telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder getEmergencyBrakesOrBuilder() {
        if (emergencyBrakesBuilder_ != null) {
          return emergencyBrakesBuilder_.getMessageOrBuilder();
        } else {
          return emergencyBrakes_ == null ?
              telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.getDefaultInstance() : emergencyBrakes_;
        }
      }
      /**
       * <code>.telemetry_data.ClientToServer.EmergencyBrakes emergency_brakes = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder> 
          getEmergencyBrakesFieldBuilder() {
        if (emergencyBrakesBuilder_ == null) {
          emergencyBrakesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakes.Builder, telemetrydata.TelemetryData.ClientToServer.EmergencyBrakesOrBuilder>(
                  getEmergencyBrakes(),
                  getParentForChildren(),
                  isClean());
          emergencyBrakes_ = null;
        }
        return emergencyBrakesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:telemetry_data.ClientToServer)
    }

    // @@protoc_insertion_point(class_scope:telemetry_data.ClientToServer)
    private static final telemetrydata.TelemetryData.ClientToServer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new telemetrydata.TelemetryData.ClientToServer();
    }

    public static telemetrydata.TelemetryData.ClientToServer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientToServer>
        PARSER = new com.google.protobuf.AbstractParser<ClientToServer>() {
      @java.lang.Override
      public ClientToServer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientToServer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClientToServer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientToServer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public telemetrydata.TelemetryData.ClientToServer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ServerToClient_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ServerToClient_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Navigation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Navigation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_StateMachine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_StateMachine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Motors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Motors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Batteries_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Batteries_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Sensors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Sensors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Sensors_ImuData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_Temperature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_Temperature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_data_ClientToServer_EmergencyBrakes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmessage.proto\022\016telemetry_data\"\360\001\n\016Serv" +
      "erToClient\0227\n\007command\030\001 \001(\0162&.telemetry_" +
      "data.ServerToClient.Command\"\244\001\n\007Command\022" +
      "\007\n\003ACK\020\000\022\010\n\004STOP\020\001\022\r\n\tCALIBRATE\020\002\022\n\n\006LAU" +
      "NCH\020\003\022\t\n\005RESET\020\004\022\031\n\025SERVICE_PROPULSION_G" +
      "O\020\005\022\033\n\027SERVICE_PROPULSION_STOP\020\006\022\023\n\017NOMI" +
      "NAL_BRAKING\020\007\022\023\n\017NOMINAL_RETRACT\020\010\"\333\r\n\016C" +
      "lientToServer\022=\n\nnavigation\030\001 \001(\0132).tele" +
      "metry_data.ClientToServer.Navigation\022B\n\r" +
      "state_machine\030\002 \001(\0132+.telemetry_data.Cli" +
      "entToServer.StateMachine\0225\n\006motors\030\003 \001(\013" +
      "2%.telemetry_data.ClientToServer.Motors\022" +
      ";\n\tbatteries\030\004 \001(\0132(.telemetry_data.Clie" +
      "ntToServer.Batteries\0227\n\007sensors\030\005 \001(\0132&." +
      "telemetry_data.ClientToServer.Sensors\022?\n" +
      "\013temperature\030\006 \001(\0132*.telemetry_data.Clie" +
      "ntToServer.Temperature\022H\n\020emergency_brak" +
      "es\030\007 \001(\0132..telemetry_data.ClientToServer" +
      ".EmergencyBrakes\032\212\001\n\nNavigation\022B\n\rmodul" +
      "e_status\030\001 \001(\0162+.telemetry_data.ClientTo" +
      "Server.ModuleStatus\022\020\n\010distance\030\002 \001(\002\022\020\n" +
      "\010velocity\030\003 \001(\002\022\024\n\014acceleration\030\004 \001(\002\032\225\002" +
      "\n\014StateMachine\022H\n\rcurrent_state\030\002 \001(\01621." +
      "telemetry_data.ClientToServer.StateMachi" +
      "ne.State\"\272\001\n\005State\022\013\n\007INVALID\020\000\022\010\n\004IDLE\020" +
      "\001\022\017\n\013CALIBRATING\020\002\022\t\n\005READY\020\003\022\020\n\014ACCELER" +
      "ATING\020\004\022\023\n\017NOMINAL_BRAKING\020\005\022\025\n\021EMERGENC" +
      "Y_BRAKING\020\006\022\020\n\014RUN_COMPLETE\020\007\022\023\n\017FAILURE" +
      "_STOPPED\020\010\022\013\n\007EXITING\020\t\022\014\n\010FINISHED\020\n\032L\n" +
      "\006Motors\022B\n\rmodule_status\030\001 \001(\0162+.telemet" +
      "ry_data.ClientToServer.ModuleStatus\032\323\003\n\t" +
      "Batteries\022B\n\rmodule_status\030\001 \001(\0162+.telem" +
      "etry_data.ClientToServer.ModuleStatus\022Q\n" +
      "\023low_power_batteries\030\002 \003(\01324.telemetry_d" +
      "ata.ClientToServer.Batteries.BatteryData" +
      "\022R\n\024high_power_batteries\030\003 \003(\01324.telemet" +
      "ry_data.ClientToServer.Batteries.Battery" +
      "Data\032\332\001\n\013BatteryData\022\017\n\007voltage\030\001 \001(\r\022\017\n" +
      "\007current\030\002 \001(\021\022\016\n\006charge\030\003 \001(\r\022\033\n\023averag" +
      "e_temperature\030\004 \001(\005\022\027\n\017low_temperature\030\005" +
      " \001(\005\022\030\n\020high_temperature\030\006 \001(\005\022\030\n\020low_vo" +
      "ltage_cell\030\007 \001(\r\022\031\n\021high_voltage_cell\030\010 " +
      "\001(\r\022\024\n\014indv_voltage\030\t \003(\r\032\267\001\n\007Sensors\022B\n" +
      "\rmodule_status\030\001 \001(\0162+.telemetry_data.Cl" +
      "ientToServer.ModuleStatus\022;\n\003imu\030\002 \003(\0132." +
      ".telemetry_data.ClientToServer.Sensors.I" +
      "muData\032+\n\007ImuData\022\023\n\013operational\030\001 \001(\010\022\013" +
      "\n\003acc\030\002 \003(\002\032\"\n\013Temperature\022\023\n\013temperatur" +
      "e\030\001 \001(\021\032!\n\017EmergencyBrakes\022\016\n\006brakes\030\001 \003" +
      "(\010\"D\n\014ModuleStatus\022\t\n\005START\020\000\022\010\n\004INIT\020\001\022" +
      "\t\n\005READY\020\002\022\024\n\020CRITICAL_FAILURE\020\003B\036\n\rtele" +
      "metrydataB\rTelemetryDatab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_telemetry_data_ServerToClient_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_telemetry_data_ServerToClient_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ServerToClient_descriptor,
        new java.lang.String[] { "Command", });
    internal_static_telemetry_data_ClientToServer_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_telemetry_data_ClientToServer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_descriptor,
        new java.lang.String[] { "Navigation", "StateMachine", "Motors", "Batteries", "Sensors", "Temperature", "EmergencyBrakes", });
    internal_static_telemetry_data_ClientToServer_Navigation_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(0);
    internal_static_telemetry_data_ClientToServer_Navigation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Navigation_descriptor,
        new java.lang.String[] { "ModuleStatus", "Distance", "Velocity", "Acceleration", });
    internal_static_telemetry_data_ClientToServer_StateMachine_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(1);
    internal_static_telemetry_data_ClientToServer_StateMachine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_StateMachine_descriptor,
        new java.lang.String[] { "CurrentState", });
    internal_static_telemetry_data_ClientToServer_Motors_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(2);
    internal_static_telemetry_data_ClientToServer_Motors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Motors_descriptor,
        new java.lang.String[] { "ModuleStatus", });
    internal_static_telemetry_data_ClientToServer_Batteries_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(3);
    internal_static_telemetry_data_ClientToServer_Batteries_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Batteries_descriptor,
        new java.lang.String[] { "ModuleStatus", "LowPowerBatteries", "HighPowerBatteries", });
    internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor =
      internal_static_telemetry_data_ClientToServer_Batteries_descriptor.getNestedTypes().get(0);
    internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Batteries_BatteryData_descriptor,
        new java.lang.String[] { "Voltage", "Current", "Charge", "AverageTemperature", "LowTemperature", "HighTemperature", "LowVoltageCell", "HighVoltageCell", "IndvVoltage", });
    internal_static_telemetry_data_ClientToServer_Sensors_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(4);
    internal_static_telemetry_data_ClientToServer_Sensors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Sensors_descriptor,
        new java.lang.String[] { "ModuleStatus", "Imu", });
    internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor =
      internal_static_telemetry_data_ClientToServer_Sensors_descriptor.getNestedTypes().get(0);
    internal_static_telemetry_data_ClientToServer_Sensors_ImuData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Sensors_ImuData_descriptor,
        new java.lang.String[] { "Operational", "Acc", });
    internal_static_telemetry_data_ClientToServer_Temperature_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(5);
    internal_static_telemetry_data_ClientToServer_Temperature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_Temperature_descriptor,
        new java.lang.String[] { "Temperature", });
    internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor =
      internal_static_telemetry_data_ClientToServer_descriptor.getNestedTypes().get(6);
    internal_static_telemetry_data_ClientToServer_EmergencyBrakes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_data_ClientToServer_EmergencyBrakes_descriptor,
        new java.lang.String[] { "Brakes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
